

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 05 20:59:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 12/10/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46K20 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    81   000000                     
    82 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    83   000000                     
    84 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    85   000000                     
    86                           	psect	idataCOMRAM
    87   00162C                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _port_registers
    91   00162C  80                 	db	128
    92   00162D  0F                 	db	15
    93   00162E  81                 	db	129
    94   00162F  0F                 	db	15
    95   001630  82                 	db	130
    96   001631  0F                 	db	15
    97   001632  83                 	db	131
    98   001633  0F                 	db	15
    99   001634  84                 	db	132
   100   001635  0F                 	db	15
   101                           
   102                           ;initializer for _lat_registers
   103   001636  89                 	db	137
   104   001637  0F                 	db	15
   105   001638  8A                 	db	138
   106   001639  0F                 	db	15
   107   00163A  8B                 	db	139
   108   00163B  0F                 	db	15
   109   00163C  8C                 	db	140
   110   00163D  0F                 	db	15
   111   00163E  8D                 	db	141
   112   00163F  0F                 	db	15
   113                           
   114                           ;initializer for _tris_registers
   115   001640  92                 	db	146
   116   001641  0F                 	db	15
   117   001642  93                 	db	147
   118   001643  0F                 	db	15
   119   001644  94                 	db	148
   120   001645  0F                 	db	15
   121   001646  95                 	db	149
   122   001647  0F                 	db	15
   123   001648  96                 	db	150
   124   001649  0F                 	db	15
   125                           
   126                           ;initializer for _date_time_lcd
   127   00164A  03                 	db	3
   128   00164B  0B                 	db	11
   129   00164C  13                 	db	19
   130   00164D  1B                 	db	27
   131   00164E  23                 	db	35
   132   00164F  2B                 	db	43
   133   000000                     _ADCON0	set	4034
   134   000000                     _ADRESL	set	4035
   135   000000                     _TXREG	set	4013
   136   000000                     _RCREG	set	4014
   137   000000                     _SPBRG	set	4015
   138   000000                     _TXSTA	set	4012
   139   000000                     _ANSELH	set	3967
   140                           
   141                           	psect	nvCOMRAM
   142   000049                     __pnvCOMRAM:
   143                           	callstack 0
   144   000049                     _TMR0_InterruptHandler:
   145                           	callstack 0
   146   000049                     	ds	2
   147   00004B                     _ADC_InterruptHandler:
   148                           	callstack 0
   149   00004B                     	ds	2
   150   00004D                     _EUSART_ErrorHandler:
   151                           	callstack 0
   152   00004D                     	ds	2
   153   00004F                     _EUSART_OverrunErrorHandler:
   154                           	callstack 0
   155   00004F                     	ds	2
   156   000051                     _EUSART_FramingErrorHandler:
   157                           	callstack 0
   158   000051                     	ds	2
   159   000000                     _T0CONbits	set	4053
   160   000000                     _LATBbits	set	3978
   161   000000                     _PORTBbits	set	3969
   162   000000                     _LATAbits	set	3977
   163   000000                     _ADCON0bits	set	4034
   164   000000                     _RCSTAbits	set	4011
   165   000000                     _TXSTAbits	set	4012
   166   000000                     _WPUB	set	3964
   167   000000                     _ANSEL	set	3966
   168   000000                     _PORTA	set	3968
   169   000000                     _LATA	set	3977
   170   000000                     _TRISA	set	3986
   171   000000                     _OSCTUNE	set	3995
   172   000000                     _OSCCON	set	4051
   173   000000                     _INTCON2bits	set	4081
   174   000000                     _TRISE	set	3990
   175   000000                     _TRISD	set	3989
   176   000000                     _TRISC	set	3988
   177   000000                     _TRISB	set	3987
   178   000000                     _LATE	set	3981
   179   000000                     _LATD	set	3980
   180   000000                     _LATC	set	3979
   181   000000                     _LATB	set	3978
   182   000000                     _PORTE	set	3972
   183   000000                     _PORTD	set	3971
   184   000000                     _PORTC	set	3970
   185   000000                     _PORTB	set	3969
   186   000000                     _INTCONbits	set	4082
   187   000000                     _T0CON	set	4053
   188   000000                     _TMR0L	set	4054
   189   000000                     _TMR0H	set	4055
   190   000000                     _PIE1bits	set	3997
   191   000000                     _PIR1bits	set	3998
   192   000000                     _RCSTA	set	4011
   193   000000                     _BAUDCON	set	4024
   194   000000                     _ADCON2	set	4032
   195   000000                     _ADCON1	set	4033
   196   000000                     _SPBRGH	set	4016
   197   000000                     _IPR1bits	set	3999
   198   000000                     _RCONbits	set	4048
   199   000000                     _ADRESH	set	4036
   200                           
   201                           	psect	smallconst
   202   001000                     __psmallconst:
   203                           	callstack 0
   204   001000  00                 	db	0
   205   001001                     STR_1:
   206   001001  25                 	db	37
   207   001002  69                 	db	105	;'i'
   208   001003  00                 	db	0
   209   001004  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214   00153C                     __pcinit:
   215                           	callstack 0
   216   00153C                     start_initialization:
   217                           	callstack 0
   218   00153C                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to COMRAM (36 bytes)
   222                           ; load TBLPTR registers with __pidataCOMRAM
   223   00153C  0E2C               	movlw	low __pidataCOMRAM
   224   00153E  6EF6               	movwf	tblptrl,c
   225   001540  0E16               	movlw	high __pidataCOMRAM
   226   001542  6EF7               	movwf	tblptrh,c
   227   001544  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   228   001546  6EF8               	movwf	tblptru,c
   229   001548  EE00  F001         	lfsr	0,__pdataCOMRAM
   230   00154C  EE10 F024          	lfsr	1,36
   231   001550                     copy_data0:
   232   001550  0009               	tblrd		*+
   233   001552  CFF5 FFEE          	movff	tablat,postinc0
   234   001556  50E5               	movf	postdec1,w,c
   235   001558  50E1               	movf	fsr1l,w,c
   236   00155A  E1FA               	bnz	copy_data0
   237                           
   238                           ; Clear objects allocated to COMRAM (16 bytes)
   239   00155C  EE00  F039         	lfsr	0,__pbssCOMRAM
   240   001560  0E10               	movlw	16
   241   001562                     clear_0:
   242   001562  6AEE               	clrf	postinc0,c
   243   001564  06E8               	decf	wreg,f,c
   244   001566  E1FD               	bnz	clear_0
   245   001568                     end_of_initialization:
   246                           	callstack 0
   247   001568                     __end_of__initialization:
   248                           	callstack 0
   249   001568  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   250   00156A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   251   00156C  0100               	movlb	0
   252   00156E  EFB6  F009         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255   000039                     __pbssCOMRAM:
   256                           	callstack 0
   257   000039                     	ds	6
   258   00003F                     TMR0_CallBack@one_sec_counter:
   259                           	callstack 0
   260   00003F                     	ds	2
   261   000041                     TMR0_ISR@CountCallBack:
   262                           	callstack 0
   263   000041                     	ds	2
   264   000043                     _converted_LDR_Value:
   265                           	callstack 0
   266   000043                     	ds	2
   267   000045                     _timer0ReloadVal:
   268                           	callstack 0
   269   000045                     	ds	1
   270   000046                     _star_button:
   271                           	callstack 0
   272   000046                     	ds	1
   273   000047                     _ret:
   274                           	callstack 0
   275   000047                     	ds	1
   276   000048                     _eusartRxLastError:
   277                           	callstack 0
   278   000048                     	ds	1
   279                           
   280                           	psect	dataCOMRAM
   281   000001                     __pdataCOMRAM:
   282                           	callstack 0
   283   000001                     _port_registers:
   284                           	callstack 0
   285   000001                     	ds	10
   286   00000B                     _lat_registers:
   287                           	callstack 0
   288   00000B                     	ds	10
   289   000015                     _tris_registers:
   290                           	callstack 0
   291   000015                     	ds	10
   292   00001F                     _date_time_lcd:
   293                           	callstack 0
   294   00001F                     	ds	6
   295                           
   296                           	psect	cstackCOMRAM
   297   000025                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000025                     ??_INTERRUPT_InterruptManagerHigh:
   300   000025                     
   301                           ; 1 bytes @ 0x0
   302   000025                     	ds	2
   303   000027                     ?_ADC_GetConversion:
   304                           	callstack 0
   305   000027                     gpio_pin_direction_intialize@_pin_config:
   306                           	callstack 0
   307   000027                     gpio_pin_write_logic@_pin_config:
   308                           	callstack 0
   309   000027                     EUSART_SetFramingErrorHandler@interruptHandler:
   310                           	callstack 0
   311   000027                     EUSART_SetOverrunErrorHandler@interruptHandler:
   312                           	callstack 0
   313   000027                     EUSART_SetErrorHandler@interruptHandler:
   314                           	callstack 0
   315   000027                     ADC_SetInterruptHandler@InterruptHandler:
   316                           	callstack 0
   317   000027                     TMR0_SetInterruptHandler@InterruptHandler:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x2
   321   000027                     	ds	1
   322   000028                     ??_gpio_pin_direction_intialize:
   323   000028                     gpio_pin_write_logic@logic:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x3
   327   000028                     	ds	1
   328   000029                     ??_gpio_pin_write_logic:
   329   000029                     ??_ADC_GetConversion:
   330                           
   331                           ; 1 bytes @ 0x4
   332   000029                     	ds	2
   333   00002B                     ADC_GetConversion@channel:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x6
   337   00002B                     	ds	2
   338   00002D                     gpio_pin_direction_intialize@ret:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x8
   342   00002D                     	ds	1
   343   00002E                     gpio_pin_write_logic@ret:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x9
   347   00002E                     	ds	1
   348   00002F                     lcd_send_4bits@lcd:
   349                           	callstack 0
   350   00002F                     lcd_4bit_send_enable_signal@lcd:
   351                           	callstack 0
   352   00002F                     gpio_pin_intialize@_pin_config:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xA
   356   00002F                     	ds	1
   357   000030                     ??_gpio_pin_intialize:
   358   000030                     lcd_send_4bits@_data_command:
   359                           	callstack 0
   360   000030                     lcd_4bit_send_enable_signal@ret:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xB
   364   000030                     	ds	1
   365   000031                     lcd_send_4bits@ret:
   366                           	callstack 0
   367   000031                     gpio_pin_intialize@ret:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xC
   371   000031                     	ds	1
   372   000032                     lcd_4bit_send_command@lcd:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xD
   376   000032                     	ds	1
   377   000033                     lcd_4bit_send_command@command:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xE
   381   000033                     	ds	1
   382   000034                     lcd_4bit_send_command@ret:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xF
   386   000034                     	ds	1
   387   000035                     lcd_4bit_intialize@lcd:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x10
   391   000035                     	ds	1
   392   000036                     ??_lcd_4bit_intialize:
   393                           
   394                           ; 1 bytes @ 0x11
   395   000036                     	ds	1
   396   000037                     lcd_4bit_intialize@ret:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x12
   400   000037                     	ds	1
   401   000038                     lcd_4bit_intialize@l_data_pins_counter:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x13
   405   000038                     	ds	1
   406   000039                     
   407                           ; 1 bytes @ 0x14
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 13 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels required when called: 9
   433 ;; This function calls:
   434 ;;		_ADC_GetConversion
   435 ;;		_SYSTEM_Initialize
   436 ;;		_TMR0_StartTimer
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text0
   443   00136C                     __ptext0:
   444                           	callstack 0
   445   00136C                     _main:
   446                           	callstack 22
   447   00136C                     
   448                           ;main.c: 16:     SYSTEM_Initialize();
   449   00136C  EC3A  F00B         	call	_SYSTEM_Initialize	;wreg free
   450   001370                     
   451                           ;main.c: 19:     (INTCONbits.GIEH = 1);
   452   001370  8EF2               	bsf	242,7,c	;volatile
   453   001372                     
   454                           ;main.c: 22:     (INTCONbits.GIEL = 1);
   455   001372  8CF2               	bsf	242,6,c	;volatile
   456   001374                     
   457                           ;main.c: 26:      (INTCONbits.PEIE = 1);
   458   001374  8CF2               	bsf	242,6,c	;volatile
   459   001376                     l2527:
   460                           
   461                           ;main.c: 30:     {;main.c: 31:         converted_LDR_Value = ADC_GetConversion(channel_A
      +                          N0);
   462   001376  0E00               	movlw	0
   463   001378  EC81  F00A         	call	_ADC_GetConversion
   464   00137C  C027  F043         	movff	?_ADC_GetConversion,_converted_LDR_Value
   465   001380  C028  F044         	movff	?_ADC_GetConversion+1,_converted_LDR_Value+1
   466   001384                     
   467                           ;main.c: 34:         if (15000 <= converted_LDR_Value){
   468   001384  0E98               	movlw	152
   469   001386  5C43               	subwf	_converted_LDR_Value^0,w,c
   470   001388  0E3A               	movlw	58
   471   00138A  5844               	subwfb	(_converted_LDR_Value+1)^0,w,c
   472   00138C  A0D8               	btfss	status,0,c
   473   00138E  EFCB  F009         	goto	u1161
   474   001392  EFCD  F009         	goto	u1160
   475   001396                     u1161:
   476   001396  EFD0  F009         	goto	l551
   477   00139A                     u1160:
   478   00139A  8289               	bsf	137,1,c	;volatile
   479   00139C  EFD1  F009         	goto	l2531
   480   0013A0                     l551:
   481   0013A0  9289               	bcf	137,1,c	;volatile
   482   0013A2                     l2531:
   483                           
   484                           ;main.c: 41:         star_button=PORTBbits.RB1;
   485   0013A2  0E00               	movlw	0
   486   0013A4  B281               	btfsc	129,1,c	;volatile
   487   0013A6  0E01               	movlw	1
   488   0013A8  6E46               	movwf	_star_button^0,c
   489   0013AA                     
   490                           ;main.c: 42:         if (star_button == 1){
   491   0013AA  0446               	decf	_star_button^0,w,c
   492   0013AC  A4D8               	btfss	status,2,c
   493   0013AE  EFDB  F009         	goto	u1171
   494   0013B2  EFDD  F009         	goto	u1170
   495   0013B6                     u1171:
   496   0013B6  EFBB  F009         	goto	l2527
   497   0013BA                     u1170:
   498   0013BA  808A               	bsf	138,0,c	;volatile
   499   0013BC                     
   500                           ;main.c: 44:         TMR0_StartTimer();
   501   0013BC  EC7E  F00B         	call	_TMR0_StartTimer	;wreg free
   502                           
   503                           ;main.c: 45:         }
   504   0013C0  EFBB  F009         	goto	l2527
   505   0013C4  EF31  F000         	goto	start
   506   0013C8                     __end_of_main:
   507                           	callstack 0
   508                           
   509 ;; *************** function _TMR0_StartTimer *****************
   510 ;; Defined at:
   511 ;;		line 94 in file "mcc_generated_files/tmr0.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		None
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 4
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text1
   540   0016FC                     __ptext1:
   541                           	callstack 0
   542   0016FC                     _TMR0_StartTimer:
   543                           	callstack 26
   544   0016FC                     
   545                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
   546   0016FC  8ED5               	bsf	213,7,c	;volatile
   547   0016FE  0012               	return		;funcret
   548   001700                     __end_of_TMR0_StartTimer:
   549                           	callstack 0
   550                           
   551 ;; *************** function _SYSTEM_Initialize *****************
   552 ;; Defined at:
   553 ;;		line 36 in file "mcc_generated_files/mcc.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 8
   574 ;; This function calls:
   575 ;;		_ADC_Initialize
   576 ;;		_EUSART_Initialize
   577 ;;		_INTERRUPT_Initialize
   578 ;;		_OSCILLATOR_Initialize
   579 ;;		_PIN_MANAGER_Initialize
   580 ;;		_TMR0_Initialize
   581 ;;		_lcd_4bit_intialize
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text2
   588   001674                     __ptext2:
   589                           	callstack 0
   590   001674                     _SYSTEM_Initialize:
   591                           	callstack 22
   592   001674                     
   593                           ;mcc_generated_files/mcc.c: 39:     INTERRUPT_Initialize();
   594   001674  EC7A  F00B         	call	_INTERRUPT_Initialize	;wreg free
   595   001678                     
   596                           ;mcc_generated_files/mcc.c: 40:     PIN_MANAGER_Initialize();
   597   001678  ECB9  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
   598   00167C                     
   599                           ;mcc_generated_files/mcc.c: 41:     OSCILLATOR_Initialize();
   600   00167C  EC61  F00B         	call	_OSCILLATOR_Initialize	;wreg free
   601   001680                     
   602                           ;mcc_generated_files/mcc.c: 42:     ADC_Initialize();
   603   001680  EC28  F00B         	call	_ADC_Initialize	;wreg free
   604   001684                     
   605                           ;mcc_generated_files/mcc.c: 43:     TMR0_Initialize();
   606   001684  EC4B  F00B         	call	_TMR0_Initialize	;wreg free
   607   001688                     
   608                           ;mcc_generated_files/mcc.c: 44:     EUSART_Initialize();
   609   001688  EC62  F00A         	call	_EUSART_Initialize	;wreg free
   610   00168C                     
   611                           ;mcc_generated_files/mcc.c: 45:     lcd_4bit_intialize(&date_time_lcd);
   612   00168C  0E1F               	movlw	low _date_time_lcd
   613   00168E  6E35               	movwf	lcd_4bit_intialize@lcd^0,c
   614   001690  EC14  F009         	call	_lcd_4bit_intialize	;wreg free
   615   001694  0012               	return		;funcret
   616   001696                     __end_of_SYSTEM_Initialize:
   617                           	callstack 0
   618                           
   619 ;; *************** function _lcd_4bit_intialize *****************
   620 ;; Defined at:
   621 ;;		line 12 in file "ECU_Layer/LCD/lcd.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  lcd             1   16[COMRAM] PTR const struct .
   624 ;;		 -> date_time_lcd(6), 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  l_data_pins_    1   19[COMRAM] unsigned char 
   627 ;;  ret             1   18[COMRAM] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      unsigned char 
   630 ;; Registers used:
   631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        4 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_gpio_pin_intialize
   646 ;;		_lcd_4bit_send_command
   647 ;; This function is called by:
   648 ;;		_SYSTEM_Initialize
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text3
   653   001228                     __ptext3:
   654                           	callstack 0
   655   001228                     _lcd_4bit_intialize:
   656                           	callstack 22
   657   001228                     
   658                           ;ECU_Layer/LCD/lcd.c: 14:     uint8 l_data_pins_counter = 0;
   659   001228  0E00               	movlw	0
   660   00122A  6E38               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
   661                           
   662                           ;ECU_Layer/LCD/lcd.c: 15:     if(((void*)0) == lcd){
   663   00122C  5035               	movf	lcd_4bit_intialize@lcd^0,w,c
   664   00122E  A4D8               	btfss	status,2,c
   665   001230  EF1C  F009         	goto	u911
   666   001234  EF1E  F009         	goto	u910
   667   001238                     u911:
   668   001238  EF20  F009         	goto	l2151
   669   00123C                     u910:
   670   00123C                     
   671                           ;ECU_Layer/LCD/lcd.c: 17:     }
   672   00123C  EF86  F009         	goto	l31
   673   001240                     l2151:
   674                           
   675                           ;ECU_Layer/LCD/lcd.c: 19:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
   676   001240  C035  F02F         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
   677   001244  EC87  F009         	call	_gpio_pin_intialize	;wreg free
   678   001248  6E37               	movwf	lcd_4bit_intialize@ret^0,c
   679                           
   680                           ;ECU_Layer/LCD/lcd.c: 20:         ret = gpio_pin_intialize(&(lcd->lcd_en));
   681   00124A  2835               	incf	lcd_4bit_intialize@lcd^0,w,c
   682   00124C  6E2F               	movwf	gpio_pin_intialize@_pin_config^0,c
   683   00124E  EC87  F009         	call	_gpio_pin_intialize	;wreg free
   684   001252  6E37               	movwf	lcd_4bit_intialize@ret^0,c
   685   001254                     
   686                           ;ECU_Layer/LCD/lcd.c: 21:         for(l_data_pins_counter=0; l_data_pins_counter<4; l_da
      +                          ta_pins_counter++){
   687   001254  0E00               	movlw	0
   688   001256  6E38               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
   689   001258                     l2159:
   690   001258  5035               	movf	lcd_4bit_intialize@lcd^0,w,c
   691   00125A  2438               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
   692   00125C  0F02               	addlw	2
   693   00125E  6E2F               	movwf	gpio_pin_intialize@_pin_config^0,c
   694   001260  EC87  F009         	call	_gpio_pin_intialize	;wreg free
   695   001264                     
   696                           ;ECU_Layer/LCD/lcd.c: 23:         }
   697   001264  2A38               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
   698   001266  0E03               	movlw	3
   699   001268  6438               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
   700   00126A  EF39  F009         	goto	u921
   701   00126E  EF3B  F009         	goto	u920
   702   001272                     u921:
   703   001272  EF2C  F009         	goto	l2159
   704   001276                     u920:
   705   001276                     
   706                           ;ECU_Layer/LCD/lcd.c: 24:         _delay((unsigned long)((20)*(16000000/4000.0)));
   707   001276  0E68               	movlw	104
   708   001278  6E36               	movwf	??_lcd_4bit_intialize^0,c
   709   00127A  0EE4               	movlw	228
   710   00127C                     u1187:
   711   00127C  2EE8               	decfsz	wreg,f,c
   712   00127E  D7FE               	bra	u1187
   713   001280  2E36               	decfsz	??_lcd_4bit_intialize^0,f,c
   714   001282  D7FC               	bra	u1187
   715   001284  F000 F000          	nop2	
   716   001288  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   717   00128C  0E38               	movlw	56
   718   00128E  6E33               	movwf	lcd_4bit_send_command@command^0,c
   719   001290  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   720   001294                     
   721                           ;ECU_Layer/LCD/lcd.c: 26:         _delay((unsigned long)((5)*(16000000/4000.0)));
   722   001294  0E1A               	movlw	26
   723   001296  6E36               	movwf	??_lcd_4bit_intialize^0,c
   724   001298  0EF8               	movlw	248
   725   00129A                     u1197:
   726   00129A  2EE8               	decfsz	wreg,f,c
   727   00129C  D7FE               	bra	u1197
   728   00129E  2E36               	decfsz	??_lcd_4bit_intialize^0,f,c
   729   0012A0  D7FC               	bra	u1197
   730   0012A2  F000 F000          	nop2	
   731   0012A6  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   732   0012AA  0E38               	movlw	56
   733   0012AC  6E33               	movwf	lcd_4bit_send_command@command^0,c
   734   0012AE  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   735   0012B2                     
   736                           ;ECU_Layer/LCD/lcd.c: 28:         _delay((unsigned long)((150)*(16000000/4000000.0)));
   737   0012B2  0EC8               	movlw	200
   738   0012B4                     u1207:
   739   0012B4  2EE8               	decfsz	wreg,f,c
   740   0012B6  D7FE               	bra	u1207
   741   0012B8  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   742   0012BC  0E38               	movlw	56
   743   0012BE  6E33               	movwf	lcd_4bit_send_command@command^0,c
   744   0012C0  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   745   0012C4  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   746   0012C8  0E01               	movlw	1
   747   0012CA  6E33               	movwf	lcd_4bit_send_command@command^0,c
   748   0012CC  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   749   0012D0  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   750   0012D4  0E02               	movlw	2
   751   0012D6  6E33               	movwf	lcd_4bit_send_command@command^0,c
   752   0012D8  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   753   0012DC  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   754   0012E0  0E06               	movlw	6
   755   0012E2  6E33               	movwf	lcd_4bit_send_command@command^0,c
   756   0012E4  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   757   0012E8  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   758   0012EC  0E0C               	movlw	12
   759   0012EE  6E33               	movwf	lcd_4bit_send_command@command^0,c
   760   0012F0  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   761   0012F4  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   762   0012F8  0E28               	movlw	40
   763   0012FA  6E33               	movwf	lcd_4bit_send_command@command^0,c
   764   0012FC  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   765   001300  C035  F032         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
   766   001304  0E80               	movlw	128
   767   001306  6E33               	movwf	lcd_4bit_send_command@command^0,c
   768   001308  ECE4  F009         	call	_lcd_4bit_send_command	;wreg free
   769   00130C                     l31:
   770   00130C  0012               	return		;funcret
   771   00130E                     __end_of_lcd_4bit_intialize:
   772                           	callstack 0
   773                           
   774 ;; *************** function _lcd_4bit_send_command *****************
   775 ;; Defined at:
   776 ;;		line 42 in file "ECU_Layer/LCD/lcd.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  lcd             1   13[COMRAM] PTR const struct .
   779 ;;		 -> date_time_lcd(6), 
   780 ;;  command         1   14[COMRAM] unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  ret             1   15[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        3 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 6
   799 ;; This function calls:
   800 ;;		_gpio_pin_write_logic
   801 ;;		_lcd_4bit_send_enable_signal
   802 ;;		_lcd_send_4bits
   803 ;; This function is called by:
   804 ;;		_lcd_4bit_intialize
   805 ;;		_lcd_4bit_send_custom_char
   806 ;;		_lcd_4bit_set_cursor
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text4
   811   0013C8                     __ptext4:
   812                           	callstack 0
   813   0013C8                     _lcd_4bit_send_command:
   814                           	callstack 22
   815   0013C8                     
   816                           ;ECU_Layer/LCD/lcd.c: 44:     if(((void*)0) == lcd){
   817   0013C8  5032               	movf	lcd_4bit_send_command@lcd^0,w,c
   818   0013CA  A4D8               	btfss	status,2,c
   819   0013CC  EFEA  F009         	goto	u901
   820   0013D0  EFEC  F009         	goto	u900
   821   0013D4                     u901:
   822   0013D4  EFF0  F009         	goto	l2131
   823   0013D8                     u900:
   824   0013D8                     
   825                           ;ECU_Layer/LCD/lcd.c: 45:         ret = (Std_ReturnType)0x00;
   826   0013D8  0E00               	movlw	0
   827   0013DA  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   828                           
   829                           ;ECU_Layer/LCD/lcd.c: 46:     }
   830   0013DC  EF10  F00A         	goto	l2133
   831   0013E0                     l2131:
   832                           
   833                           ;ECU_Layer/LCD/lcd.c: 50:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
   834   0013E0  C032  F027         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
   835   0013E4  0E00               	movlw	0
   836   0013E6  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   837   0013E8  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   838   0013EC  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   839                           
   840                           ;ECU_Layer/LCD/lcd.c: 52:         ret = lcd_send_4bits(lcd, command >> 4);
   841   0013EE  C032  F02F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
   842   0013F2  3833               	swapf	lcd_4bit_send_command@command^0,w,c
   843   0013F4  0B0F               	andlw	15
   844   0013F6  6E30               	movwf	lcd_send_4bits@_data_command^0,c
   845   0013F8  EC12  F00A         	call	_lcd_send_4bits	;wreg free
   846   0013FC  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   847                           
   848                           ;ECU_Layer/LCD/lcd.c: 54:         ret = lcd_4bit_send_enable_signal(lcd);
   849   0013FE  C032  F02F         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
   850   001402  EC02  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   851   001406  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   852                           
   853                           ;ECU_Layer/LCD/lcd.c: 56:         ret = lcd_send_4bits(lcd, command);
   854   001408  C032  F02F         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
   855   00140C  C033  F030         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
   856   001410  EC12  F00A         	call	_lcd_send_4bits	;wreg free
   857   001414  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   858                           
   859                           ;ECU_Layer/LCD/lcd.c: 58:         ret = lcd_4bit_send_enable_signal(lcd);
   860   001416  C032  F02F         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
   861   00141A  EC02  F00B         	call	_lcd_4bit_send_enable_signal	;wreg free
   862   00141E  6E34               	movwf	lcd_4bit_send_command@ret^0,c
   863   001420                     l2133:
   864                           
   865                           ;ECU_Layer/LCD/lcd.c: 60:     return ret;
   866   001420  5034               	movf	lcd_4bit_send_command@ret^0,w,c
   867   001422  0012               	return		;funcret
   868   001424                     __end_of_lcd_4bit_send_command:
   869                           	callstack 0
   870                           
   871 ;; *************** function _lcd_send_4bits *****************
   872 ;; Defined at:
   873 ;;		line 320 in file "ECU_Layer/LCD/lcd.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  lcd             1   10[COMRAM] PTR const struct .
   876 ;;		 -> date_time_lcd(6), 
   877 ;;  _data_comman    1   11[COMRAM] unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  ret             1   12[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      unsigned char 
   882 ;; Registers used:
   883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;Total ram usage:        3 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 5
   896 ;; This function calls:
   897 ;;		_gpio_pin_write_logic
   898 ;; This function is called by:
   899 ;;		_lcd_4bit_send_command
   900 ;;		_lcd_4bit_send_char_data
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text5
   905   001424                     __ptext5:
   906                           	callstack 0
   907   001424                     _lcd_send_4bits:
   908                           	callstack 22
   909   001424  502F               	movf	lcd_send_4bits@lcd^0,w,c
   910   001426  0F02               	addlw	2
   911   001428  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   912   00142A  5030               	movf	lcd_send_4bits@_data_command^0,w,c
   913   00142C  0B01               	andlw	1
   914   00142E  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   915   001430  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   916   001434  502F               	movf	lcd_send_4bits@lcd^0,w,c
   917   001436  0F03               	addlw	3
   918   001438  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   919   00143A  90D8               	bcf	status,0,c
   920   00143C  3030               	rrcf	lcd_send_4bits@_data_command^0,w,c
   921   00143E  0B01               	andlw	1
   922   001440  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   923   001442  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   924   001446  502F               	movf	lcd_send_4bits@lcd^0,w,c
   925   001448  0F04               	addlw	4
   926   00144A  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   927   00144C  4030               	rrncf	lcd_send_4bits@_data_command^0,w,c
   928   00144E  42E8               	rrncf	wreg,f,c
   929   001450  0B3F               	andlw	63
   930   001452  0B01               	andlw	1
   931   001454  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   932   001456  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   933   00145A                     
   934                           ;ECU_Layer/LCD/lcd.c: 325:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]), (_data_co
      +                          mmand >> 3) & (uint8)0x01);
   935   00145A  502F               	movf	lcd_send_4bits@lcd^0,w,c
   936   00145C  0F05               	addlw	5
   937   00145E  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   938   001460  3830               	swapf	lcd_send_4bits@_data_command^0,w,c
   939   001462  46E8               	rlncf	wreg,f,c
   940   001464  0B1F               	andlw	31
   941   001466  0B01               	andlw	1
   942   001468  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   943   00146A  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   944   00146E  6E31               	movwf	lcd_send_4bits@ret^0,c
   945                           
   946                           ;ECU_Layer/LCD/lcd.c: 326:     return ret;
   947   001470  5031               	movf	lcd_send_4bits@ret^0,w,c
   948   001472  0012               	return		;funcret
   949   001474                     __end_of_lcd_send_4bits:
   950                           	callstack 0
   951                           
   952 ;; *************** function _lcd_4bit_send_enable_signal *****************
   953 ;; Defined at:
   954 ;;		line 330 in file "ECU_Layer/LCD/lcd.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  lcd             1   10[COMRAM] PTR const struct .
   957 ;;		 -> date_time_lcd(6), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  ret             1   11[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      unsigned char 
   962 ;; Registers used:
   963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 5
   976 ;; This function calls:
   977 ;;		_gpio_pin_write_logic
   978 ;; This function is called by:
   979 ;;		_lcd_4bit_send_command
   980 ;;		_lcd_4bit_send_char_data
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text6
   985   001604                     __ptext6:
   986                           	callstack 0
   987   001604                     _lcd_4bit_send_enable_signal:
   988                           	callstack 22
   989   001604  282F               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
   990   001606  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   991   001608  0E01               	movlw	1
   992   00160A  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   993   00160C  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
   994   001610                     
   995                           ;ECU_Layer/LCD/lcd.c: 333:     _delay((unsigned long)((5)*(16000000/4000000.0)));
   996   001610  0E06               	movlw	6
   997   001612                     u1217:
   998   001612  2EE8               	decfsz	wreg,f,c
   999   001614  D7FE               	bra	u1217
  1000   001616  F000 F000          	nop2	
  1001   00161A                     
  1002                           ;ECU_Layer/LCD/lcd.c: 334:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  1003   00161A  282F               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1004   00161C  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1005   00161E  0E00               	movlw	0
  1006   001620  6E28               	movwf	gpio_pin_write_logic@logic^0,c
  1007   001622  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
  1008   001626  6E30               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1009   001628                     
  1010                           ;ECU_Layer/LCD/lcd.c: 335:     return ret;
  1011   001628  5030               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1012   00162A  0012               	return		;funcret
  1013   00162C                     __end_of_lcd_4bit_send_enable_signal:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _gpio_pin_intialize *****************
  1017 ;; Defined at:
  1018 ;;		line 100 in file "MCAL_Layer/GPIO/gpio.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  1021 ;;		 -> date_time_lcd$lcd_data(4), date_time_lcd(6), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  ret             1   12[COMRAM] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      unsigned char 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1033 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;Total ram usage:        3 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		_gpio_pin_direction_intialize
  1042 ;;		_gpio_pin_write_logic
  1043 ;; This function is called by:
  1044 ;;		_lcd_4bit_intialize
  1045 ;;		_lcd_8bit_intialize
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text7
  1050   00130E                     __ptext7:
  1051                           	callstack 0
  1052   00130E                     _gpio_pin_intialize:
  1053                           	callstack 23
  1054   00130E                     
  1055                           ;MCAL_Layer/GPIO/gpio.c: 102:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -
      +                          1){
  1056   00130E  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1057   001310  B4D8               	btfsc	status,2,c
  1058   001312  EF8D  F009         	goto	u881
  1059   001316  EF8F  F009         	goto	u880
  1060   00131A                     u881:
  1061   00131A  EF9F  F009         	goto	l2119
  1062   00131E                     u880:
  1063   00131E  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1064   001320  6ED9               	movwf	fsr2l,c
  1065   001322  6ADA               	clrf	fsr2h,c
  1066   001324  30DF               	rrcf	223,w,c
  1067   001326  32E8               	rrcf	wreg,f,c
  1068   001328  32E8               	rrcf	wreg,f,c
  1069   00132A  0B07               	andlw	7
  1070   00132C  6E30               	movwf	??_gpio_pin_intialize^0,c
  1071   00132E  0E07               	movlw	7
  1072   001330  6430               	cpfsgt	??_gpio_pin_intialize^0,c
  1073   001332  EF9D  F009         	goto	u891
  1074   001336  EF9F  F009         	goto	u890
  1075   00133A                     u891:
  1076   00133A  EFA3  F009         	goto	l2121
  1077   00133E                     u890:
  1078   00133E                     l2119:
  1079                           
  1080                           ;MCAL_Layer/GPIO/gpio.c: 103:         ret = (Std_ReturnType)0x00;
  1081   00133E  0E00               	movlw	0
  1082   001340  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1083                           
  1084                           ;MCAL_Layer/GPIO/gpio.c: 104:     }
  1085   001342  EFB4  F009         	goto	l2123
  1086   001346                     l2121:
  1087                           
  1088                           ;MCAL_Layer/GPIO/gpio.c: 106:         ret = gpio_pin_direction_intialize(_pin_config);
  1089   001346  C02F  F027         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1090   00134A  EC03  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1091   00134E  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1092                           
  1093                           ;MCAL_Layer/GPIO/gpio.c: 107:         ret = gpio_pin_write_logic(_pin_config, _pin_confi
      +                          g->logic);
  1094   001350  C02F  F027         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1095   001354  502F               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1096   001356  6ED9               	movwf	fsr2l,c
  1097   001358  6ADA               	clrf	fsr2h,c
  1098   00135A  0E00               	movlw	0
  1099   00135C  BEDF               	btfsc	indf2,7,c
  1100   00135E  0E01               	movlw	1
  1101   001360  6E28               	movwf	gpio_pin_write_logic@logic^0,c
  1102   001362  EC8C  F008         	call	_gpio_pin_write_logic	;wreg free
  1103   001366  6E31               	movwf	gpio_pin_intialize@ret^0,c
  1104   001368                     l2123:
  1105                           
  1106                           ;MCAL_Layer/GPIO/gpio.c: 109:     return ret;
  1107   001368  5031               	movf	gpio_pin_intialize@ret^0,w,c
  1108   00136A  0012               	return		;funcret
  1109   00136C                     __end_of_gpio_pin_intialize:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _gpio_pin_write_logic *****************
  1113 ;; Defined at:
  1114 ;;		line 50 in file "MCAL_Layer/GPIO/gpio.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  _pin_config     1    2[COMRAM] PTR const struct .
  1117 ;;		 -> date_time_lcd$lcd_data(4), date_time_lcd(6), 
  1118 ;;  logic           1    3[COMRAM] enum E3313
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  ret             1    9[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        8 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_lcd_4bit_send_command
  1141 ;;		_lcd_send_4bits
  1142 ;;		_lcd_4bit_send_enable_signal
  1143 ;;		_gpio_pin_intialize
  1144 ;;		_lcd_4bit_send_char_data
  1145 ;;		_lcd_8bit_send_command
  1146 ;;		_lcd_8bit_send_char_data
  1147 ;;		_lcd_8bit_send_enable_signal
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text8
  1152   001118                     __ptext8:
  1153                           	callstack 0
  1154   001118                     _gpio_pin_write_logic:
  1155                           	callstack 22
  1156   001118                     
  1157                           ;MCAL_Layer/GPIO/gpio.c: 51:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1158   001118  0E01               	movlw	1
  1159   00111A  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1160                           
  1161                           ;MCAL_Layer/GPIO/gpio.c: 52:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          ){
  1162   00111C  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1163   00111E  B4D8               	btfsc	status,2,c
  1164   001120  EF94  F008         	goto	u791
  1165   001124  EF96  F008         	goto	u790
  1166   001128                     u791:
  1167   001128  EFA6  F008         	goto	l2055
  1168   00112C                     u790:
  1169   00112C  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1170   00112E  6ED9               	movwf	fsr2l,c
  1171   001130  6ADA               	clrf	fsr2h,c
  1172   001132  30DF               	rrcf	223,w,c
  1173   001134  32E8               	rrcf	wreg,f,c
  1174   001136  32E8               	rrcf	wreg,f,c
  1175   001138  0B07               	andlw	7
  1176   00113A  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1177   00113C  0E07               	movlw	7
  1178   00113E  6429               	cpfsgt	??_gpio_pin_write_logic^0,c
  1179   001140  EFA4  F008         	goto	u801
  1180   001144  EFA6  F008         	goto	u800
  1181   001148                     u801:
  1182   001148  EFFD  F008         	goto	l2063
  1183   00114C                     u800:
  1184   00114C                     l2055:
  1185                           
  1186                           ;MCAL_Layer/GPIO/gpio.c: 53:         ret = (Std_ReturnType)0x00;
  1187   00114C  0E00               	movlw	0
  1188   00114E  6E2E               	movwf	gpio_pin_write_logic@ret^0,c
  1189                           
  1190                           ;MCAL_Layer/GPIO/gpio.c: 54:     }
  1191   001150  EF12  F009         	goto	l2065
  1192   001154                     l2057:
  1193                           
  1194                           ;MCAL_Layer/GPIO/gpio.c: 58:                 (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
  1195   001154  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1196   001156  6ED9               	movwf	fsr2l,c
  1197   001158  6ADA               	clrf	fsr2h,c
  1198   00115A  30DF               	rrcf	223,w,c
  1199   00115C  32E8               	rrcf	wreg,f,c
  1200   00115E  32E8               	rrcf	wreg,f,c
  1201   001160  0B07               	andlw	7
  1202   001162  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1203   001164  0E01               	movlw	1
  1204   001166  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1205   001168  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1206   00116A  EFB9  F008         	goto	u814
  1207   00116E                     u815:
  1208   00116E  90D8               	bcf	status,0,c
  1209   001170  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1210   001172                     u814:
  1211   001172  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1212   001174  EFB7  F008         	goto	u815
  1213   001178  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1214   00117A  0AFF               	xorlw	255
  1215   00117C  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1216   00117E  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1217   001180  6ED9               	movwf	fsr2l,c
  1218   001182  6ADA               	clrf	fsr2h,c
  1219   001184  50DF               	movf	223,w,c
  1220   001186  0B07               	andlw	7
  1221   001188  0D02               	mullw	2
  1222   00118A  50F3               	movf	243,w,c
  1223   00118C  0F0B               	addlw	low _lat_registers
  1224   00118E  6ED9               	movwf	fsr2l,c
  1225   001190  6ADA               	clrf	fsr2h,c
  1226   001192  CFDE F02C          	movff	postinc2,??_gpio_pin_write_logic+3
  1227   001196  CFDD F02D          	movff	postdec2,??_gpio_pin_write_logic+4
  1228   00119A  C02C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1229   00119E  C02D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1230   0011A2  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1231   0011A4  16DF               	andwf	indf2,f,c
  1232                           
  1233                           ;MCAL_Layer/GPIO/gpio.c: 59:                 break;
  1234   0011A6  EF12  F009         	goto	l2065
  1235   0011AA                     l2059:
  1236                           
  1237                           ;MCAL_Layer/GPIO/gpio.c: 61:                 (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
  1238   0011AA  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1239   0011AC  6ED9               	movwf	fsr2l,c
  1240   0011AE  6ADA               	clrf	fsr2h,c
  1241   0011B0  30DF               	rrcf	223,w,c
  1242   0011B2  32E8               	rrcf	wreg,f,c
  1243   0011B4  32E8               	rrcf	wreg,f,c
  1244   0011B6  0B07               	andlw	7
  1245   0011B8  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1246   0011BA  0E01               	movlw	1
  1247   0011BC  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1248   0011BE  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1249   0011C0  EFE4  F008         	goto	u824
  1250   0011C4                     u825:
  1251   0011C4  90D8               	bcf	status,0,c
  1252   0011C6  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1253   0011C8                     u824:
  1254   0011C8  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1255   0011CA  EFE2  F008         	goto	u825
  1256   0011CE  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1257   0011D0  6ED9               	movwf	fsr2l,c
  1258   0011D2  6ADA               	clrf	fsr2h,c
  1259   0011D4  50DF               	movf	223,w,c
  1260   0011D6  0B07               	andlw	7
  1261   0011D8  0D02               	mullw	2
  1262   0011DA  50F3               	movf	243,w,c
  1263   0011DC  0F0B               	addlw	low _lat_registers
  1264   0011DE  6ED9               	movwf	fsr2l,c
  1265   0011E0  6ADA               	clrf	fsr2h,c
  1266   0011E2  CFDE F02B          	movff	postinc2,??_gpio_pin_write_logic+2
  1267   0011E6  CFDD F02C          	movff	postdec2,??_gpio_pin_write_logic+3
  1268   0011EA  C02B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1269   0011EE  C02C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1270   0011F2  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1271   0011F4  12DF               	iorwf	indf2,f,c
  1272                           
  1273                           ;MCAL_Layer/GPIO/gpio.c: 62:                 break;
  1274   0011F6  EF12  F009         	goto	l2065
  1275   0011FA                     l2063:
  1276   0011FA  5028               	movf	gpio_pin_write_logic@logic^0,w,c
  1277   0011FC  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1278   0011FE  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1279                           
  1280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 1, Range of values is 0 to 0
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte            4     3 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287   001200  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1288   001202  0A00               	xorlw	0	; case 0
  1289   001204  B4D8               	btfsc	status,2,c
  1290   001206  EF07  F009         	goto	l2541
  1291   00120A  EFA6  F008         	goto	l2055
  1292   00120E                     l2541:
  1293                           
  1294                           ; Switch size 1, requested type "simple"
  1295                           ; Number of cases is 2, Range of values is 0 to 1
  1296                           ; switch strategies available:
  1297                           ; Name         Instructions Cycles
  1298                           ; simple_byte            7     4 (average)
  1299                           ;	Chosen strategy is simple_byte
  1300   00120E  5029               	movf	??_gpio_pin_write_logic^0,w,c
  1301   001210  0A00               	xorlw	0	; case 0
  1302   001212  B4D8               	btfsc	status,2,c
  1303   001214  EFAA  F008         	goto	l2057
  1304   001218  0A01               	xorlw	1	; case 1
  1305   00121A  B4D8               	btfsc	status,2,c
  1306   00121C  EFD5  F008         	goto	l2059
  1307   001220  EFA6  F008         	goto	l2055
  1308   001224                     l2065:
  1309                           
  1310                           ;MCAL_Layer/GPIO/gpio.c: 66:     return ret;
  1311   001224  502E               	movf	gpio_pin_write_logic@ret^0,w,c
  1312   001226  0012               	return		;funcret
  1313   001228                     __end_of_gpio_pin_write_logic:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _gpio_pin_direction_intialize *****************
  1317 ;; Defined at:
  1318 ;;		line 14 in file "MCAL_Layer/GPIO/gpio.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  _pin_config     1    2[COMRAM] PTR const struct .
  1321 ;;		 -> date_time_lcd$lcd_data(4), date_time_lcd(6), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  ret             1    8[COMRAM] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      unsigned char 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        7 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 4
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_gpio_pin_intialize
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text9
  1348   001006                     __ptext9:
  1349                           	callstack 0
  1350   001006                     _gpio_pin_direction_intialize:
  1351                           	callstack 23
  1352   001006                     
  1353                           ;MCAL_Layer/GPIO/gpio.c: 15:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1354   001006  0E01               	movlw	1
  1355   001008  6E2D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1356                           
  1357                           ;MCAL_Layer/GPIO/gpio.c: 16:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1
      +                          ){
  1358   00100A  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1359   00100C  B4D8               	btfsc	status,2,c
  1360   00100E  EF0B  F008         	goto	u831
  1361   001012  EF0D  F008         	goto	u830
  1362   001016                     u831:
  1363   001016  EF1D  F008         	goto	l2101
  1364   00101A                     u830:
  1365   00101A  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1366   00101C  6ED9               	movwf	fsr2l,c
  1367   00101E  6ADA               	clrf	fsr2h,c
  1368   001020  30DF               	rrcf	223,w,c
  1369   001022  32E8               	rrcf	wreg,f,c
  1370   001024  32E8               	rrcf	wreg,f,c
  1371   001026  0B07               	andlw	7
  1372   001028  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1373   00102A  0E07               	movlw	7
  1374   00102C  6428               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1375   00102E  EF1B  F008         	goto	u841
  1376   001032  EF1D  F008         	goto	u840
  1377   001036                     u841:
  1378   001036  EF74  F008         	goto	l2109
  1379   00103A                     u840:
  1380   00103A                     l2101:
  1381                           
  1382                           ;MCAL_Layer/GPIO/gpio.c: 17:         ret = (Std_ReturnType)0x00;
  1383   00103A  0E00               	movlw	0
  1384   00103C  6E2D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1385                           
  1386                           ;MCAL_Layer/GPIO/gpio.c: 18:     }
  1387   00103E  EF8A  F008         	goto	l2111
  1388   001042                     l2103:
  1389                           
  1390                           ;MCAL_Layer/GPIO/gpio.c: 22:                 (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
  1391   001042  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1392   001044  6ED9               	movwf	fsr2l,c
  1393   001046  6ADA               	clrf	fsr2h,c
  1394   001048  30DF               	rrcf	223,w,c
  1395   00104A  32E8               	rrcf	wreg,f,c
  1396   00104C  32E8               	rrcf	wreg,f,c
  1397   00104E  0B07               	andlw	7
  1398   001050  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1399   001052  0E01               	movlw	1
  1400   001054  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1401   001056  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
  1402   001058  EF30  F008         	goto	u854
  1403   00105C                     u855:
  1404   00105C  90D8               	bcf	status,0,c
  1405   00105E  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1406   001060                     u854:
  1407   001060  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1408   001062  EF2E  F008         	goto	u855
  1409   001066  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1410   001068  0AFF               	xorlw	255
  1411   00106A  6E2A               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1412   00106C  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1413   00106E  6ED9               	movwf	fsr2l,c
  1414   001070  6ADA               	clrf	fsr2h,c
  1415   001072  50DF               	movf	223,w,c
  1416   001074  0B07               	andlw	7
  1417   001076  0D02               	mullw	2
  1418   001078  50F3               	movf	243,w,c
  1419   00107A  0F15               	addlw	low _tris_registers
  1420   00107C  6ED9               	movwf	fsr2l,c
  1421   00107E  6ADA               	clrf	fsr2h,c
  1422   001080  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1423   001084  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1424   001088  C02B  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1425   00108C  C02C  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1426   001090  502A               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1427   001092  16DF               	andwf	indf2,f,c
  1428                           
  1429                           ;MCAL_Layer/GPIO/gpio.c: 23:                 break;
  1430   001094  EF8A  F008         	goto	l2111
  1431   001098                     l2105:
  1432                           
  1433                           ;MCAL_Layer/GPIO/gpio.c: 25:                 (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
  1434   001098  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1435   00109A  6ED9               	movwf	fsr2l,c
  1436   00109C  6ADA               	clrf	fsr2h,c
  1437   00109E  30DF               	rrcf	223,w,c
  1438   0010A0  32E8               	rrcf	wreg,f,c
  1439   0010A2  32E8               	rrcf	wreg,f,c
  1440   0010A4  0B07               	andlw	7
  1441   0010A6  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
  1442   0010A8  0E01               	movlw	1
  1443   0010AA  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1444   0010AC  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
  1445   0010AE  EF5B  F008         	goto	u864
  1446   0010B2                     u865:
  1447   0010B2  90D8               	bcf	status,0,c
  1448   0010B4  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1449   0010B6                     u864:
  1450   0010B6  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1451   0010B8  EF59  F008         	goto	u865
  1452   0010BC  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1453   0010BE  6ED9               	movwf	fsr2l,c
  1454   0010C0  6ADA               	clrf	fsr2h,c
  1455   0010C2  50DF               	movf	223,w,c
  1456   0010C4  0B07               	andlw	7
  1457   0010C6  0D02               	mullw	2
  1458   0010C8  50F3               	movf	243,w,c
  1459   0010CA  0F15               	addlw	low _tris_registers
  1460   0010CC  6ED9               	movwf	fsr2l,c
  1461   0010CE  6ADA               	clrf	fsr2h,c
  1462   0010D0  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1463   0010D4  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1464   0010D8  C02A  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1465   0010DC  C02B  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1466   0010E0  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1467   0010E2  12DF               	iorwf	indf2,f,c
  1468                           
  1469                           ;MCAL_Layer/GPIO/gpio.c: 26:                 break;
  1470   0010E4  EF8A  F008         	goto	l2111
  1471   0010E8                     l2109:
  1472   0010E8  5027               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1473   0010EA  6ED9               	movwf	fsr2l,c
  1474   0010EC  6ADA               	clrf	fsr2h,c
  1475   0010EE  BCDF               	btfsc	indf2,6,c
  1476   0010F0  EF7C  F008         	goto	u871
  1477   0010F4  EF7F  F008         	goto	u870
  1478   0010F8                     u871:
  1479   0010F8  0E01               	movlw	1
  1480   0010FA  EF80  F008         	goto	u876
  1481   0010FE                     u870:
  1482   0010FE  0E00               	movlw	0
  1483   001100                     u876:
  1484                           
  1485                           ; Switch size 1, requested type "simple"
  1486                           ; Number of cases is 2, Range of values is 0 to 1
  1487                           ; switch strategies available:
  1488                           ; Name         Instructions Cycles
  1489                           ; simple_byte            7     4 (average)
  1490                           ;	Chosen strategy is simple_byte
  1491   001100  0A00               	xorlw	0	; case 0
  1492   001102  B4D8               	btfsc	status,2,c
  1493   001104  EF21  F008         	goto	l2103
  1494   001108  0A01               	xorlw	1	; case 1
  1495   00110A  B4D8               	btfsc	status,2,c
  1496   00110C  EF4C  F008         	goto	l2105
  1497   001110  EF1D  F008         	goto	l2101
  1498   001114                     l2111:
  1499                           
  1500                           ;MCAL_Layer/GPIO/gpio.c: 30:     return ret;
  1501   001114  502D               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1502   001116  0012               	return		;funcret
  1503   001118                     __end_of_gpio_pin_direction_intialize:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _TMR0_Initialize *****************
  1507 ;; Defined at:
  1508 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 5
  1529 ;; This function calls:
  1530 ;;		_TMR0_SetInterruptHandler
  1531 ;; This function is called by:
  1532 ;;		_SYSTEM_Initialize
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text10
  1537   001696                     __ptext10:
  1538                           	callstack 0
  1539   001696                     _TMR0_Initialize:
  1540                           	callstack 24
  1541   001696                     
  1542                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  1543   001696  0E00               	movlw	0
  1544   001698  6ED7               	movwf	215,c	;volatile
  1545                           
  1546                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x06;
  1547   00169A  0E06               	movlw	6
  1548   00169C  6ED6               	movwf	214,c	;volatile
  1549                           
  1550                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 6;
  1551   00169E  0E06               	movlw	6
  1552   0016A0  6E45               	movwf	_timer0ReloadVal^0,c	;volatile
  1553   0016A2                     
  1554                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  1555   0016A2  94F2               	bcf	242,2,c	;volatile
  1556   0016A4                     
  1557                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  1558   0016A4  8AF2               	bsf	242,5,c	;volatile
  1559   0016A6                     
  1560                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1561   0016A6  0E00               	movlw	low _TMR0_DefaultInterruptHandler
  1562   0016A8  6E27               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1563   0016AA  0E17               	movlw	high _TMR0_DefaultInterruptHandler
  1564   0016AC  6E28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1565   0016AE  EC5C  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1566   0016B2                     
  1567                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0xD3;
  1568   0016B2  0ED3               	movlw	211
  1569   0016B4  6ED5               	movwf	213,c	;volatile
  1570   0016B6  0012               	return		;funcret
  1571   0016B8                     __end_of_TMR0_Initialize:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _TMR0_SetInterruptHandler *****************
  1575 ;; Defined at:
  1576 ;;		line 173 in file "mcc_generated_files/tmr0.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1579 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 4
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_TMR0_Initialize
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text11
  1606   0016B8                     __ptext11:
  1607                           	callstack 0
  1608   0016B8                     _TMR0_SetInterruptHandler:
  1609                           	callstack 24
  1610   0016B8                     
  1611                           ;mcc_generated_files/tmr0.c: 174:     TMR0_InterruptHandler = InterruptHandler;
  1612   0016B8  C027  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1613   0016BC  C028  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1614   0016C0  0012               	return		;funcret
  1615   0016C2                     __end_of_TMR0_SetInterruptHandler:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _PIN_MANAGER_Initialize *****************
  1619 ;; Defined at:
  1620 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 4
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_SYSTEM_Initialize
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text12
  1649   001572                     __ptext12:
  1650                           	callstack 0
  1651   001572                     _PIN_MANAGER_Initialize:
  1652                           	callstack 25
  1653   001572                     
  1654                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1655   001572  0E00               	movlw	0
  1656   001574  6E8D               	movwf	141,c	;volatile
  1657                           
  1658                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1659   001576  0E00               	movlw	0
  1660   001578  6E8C               	movwf	140,c	;volatile
  1661                           
  1662                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1663   00157A  0E00               	movlw	0
  1664   00157C  6E89               	movwf	137,c	;volatile
  1665                           
  1666                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1667   00157E  0E00               	movlw	0
  1668   001580  6E8A               	movwf	138,c	;volatile
  1669                           
  1670                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x20;
  1671   001582  0E20               	movlw	32
  1672   001584  6E8B               	movwf	139,c	;volatile
  1673                           
  1674                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1675   001586  0E07               	movlw	7
  1676   001588  6E96               	movwf	150,c	;volatile
  1677                           
  1678                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFD;
  1679   00158A  0EFD               	movlw	253
  1680   00158C  6E92               	movwf	146,c	;volatile
  1681                           
  1682                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFE;
  1683   00158E  0EFE               	movlw	254
  1684   001590  6E93               	movwf	147,c	;volatile
  1685                           
  1686                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  1687   001592  0E9F               	movlw	159
  1688   001594  6E94               	movwf	148,c	;volatile
  1689   001596                     
  1690                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1691   001596  6895               	setf	149,c	;volatile
  1692                           
  1693                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFD;
  1694   001598  0EFD               	movlw	253
  1695   00159A  6E7E               	movwf	126,c	;volatile
  1696                           
  1697                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x0B;
  1698   00159C  0E0B               	movlw	11
  1699   00159E  6E7F               	movwf	127,c	;volatile
  1700                           
  1701                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1702   0015A0  0E00               	movlw	0
  1703   0015A2  6E7C               	movwf	124,c	;volatile
  1704   0015A4                     
  1705                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1706   0015A4  8EF1               	bsf	241,7,c	;volatile
  1707   0015A6  0012               	return		;funcret
  1708   0015A8                     __end_of_PIN_MANAGER_Initialize:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _OSCILLATOR_Initialize *****************
  1712 ;; Defined at:
  1713 ;;		line 48 in file "mcc_generated_files/mcc.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 4
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_SYSTEM_Initialize
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text13
  1742   0016C2                     __ptext13:
  1743                           	callstack 0
  1744   0016C2                     _OSCILLATOR_Initialize:
  1745                           	callstack 25
  1746   0016C2                     
  1747                           ;mcc_generated_files/mcc.c: 51:     OSCCON = 0x30;
  1748   0016C2  0E30               	movlw	48
  1749   0016C4  6ED3               	movwf	211,c	;volatile
  1750                           
  1751                           ;mcc_generated_files/mcc.c: 53:     OSCTUNE = 0x00;
  1752   0016C6  0E00               	movlw	0
  1753   0016C8  6E9B               	movwf	155,c	;volatile
  1754   0016CA  0012               	return		;funcret
  1755   0016CC                     __end_of_OSCILLATOR_Initialize:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _INTERRUPT_Initialize *****************
  1759 ;; Defined at:
  1760 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		None
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 4
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_SYSTEM_Initialize
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text14
  1789   0016F4                     __ptext14:
  1790                           	callstack 0
  1791   0016F4                     _INTERRUPT_Initialize:
  1792                           	callstack 25
  1793   0016F4                     
  1794                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  1795   0016F4  8ED0               	bsf	208,7,c	;volatile
  1796                           
  1797                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  1798   0016F6  8C9F               	bsf	159,6,c	;volatile
  1799                           
  1800                           ;mcc_generated_files/interrupt_manager.c: 63:     INTCON2bits.TMR0IP = 1;
  1801   0016F8  84F1               	bsf	241,2,c	;volatile
  1802   0016FA  0012               	return		;funcret
  1803   0016FC                     __end_of_INTERRUPT_Initialize:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _EUSART_Initialize *****************
  1807 ;; Defined at:
  1808 ;;		line 16 in file "mcc_generated_files/eusart.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 5
  1829 ;; This function calls:
  1830 ;;		_EUSART_SetErrorHandler
  1831 ;;		_EUSART_SetFramingErrorHandler
  1832 ;;		_EUSART_SetOverrunErrorHandler
  1833 ;; This function is called by:
  1834 ;;		_SYSTEM_Initialize
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text15
  1839   0014C4                     __ptext15:
  1840                           	callstack 0
  1841   0014C4                     _EUSART_Initialize:
  1842                           	callstack 24
  1843   0014C4                     
  1844                           ;mcc_generated_files/eusart.c: 21:     BAUDCON = 0x08;
  1845   0014C4  0E08               	movlw	8
  1846   0014C6  6EB8               	movwf	184,c	;volatile
  1847                           
  1848                           ;mcc_generated_files/eusart.c: 24:     RCSTA = 0x90;
  1849   0014C8  0E90               	movlw	144
  1850   0014CA  6EAB               	movwf	171,c	;volatile
  1851                           
  1852                           ;mcc_generated_files/eusart.c: 27:     TXSTA = 0x24;
  1853   0014CC  0E24               	movlw	36
  1854   0014CE  6EAC               	movwf	172,c	;volatile
  1855                           
  1856                           ;mcc_generated_files/eusart.c: 30:     SPBRG = 0xA0;
  1857   0014D0  0EA0               	movlw	160
  1858   0014D2  6EAF               	movwf	175,c	;volatile
  1859                           
  1860                           ;mcc_generated_files/eusart.c: 33:     SPBRGH = 0x01;
  1861   0014D4  0E01               	movlw	1
  1862   0014D6  6EB0               	movwf	176,c	;volatile
  1863   0014D8                     
  1864                           ;mcc_generated_files/eusart.c: 36:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  1865   0014D8  0E00               	movlw	0
  1866   0014DA  6E27               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1867   0014DC  0E00               	movlw	0
  1868   0014DE  6E28               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1869   0014E0  EC6B  F00B         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1870   0014E4                     
  1871                           ;mcc_generated_files/eusart.c: 37:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  1872   0014E4  0E00               	movlw	0
  1873   0014E6  6E27               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1874   0014E8  0E00               	movlw	0
  1875   0014EA  6E28               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1876   0014EC  EC66  F00B         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1877   0014F0                     
  1878                           ;mcc_generated_files/eusart.c: 38:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  1879   0014F0  0E00               	movlw	0
  1880   0014F2  6E27               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1881   0014F4  0E00               	movlw	0
  1882   0014F6  6E28               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1883   0014F8  EC70  F00B         	call	_EUSART_SetErrorHandler	;wreg free
  1884   0014FC                     
  1885                           ;mcc_generated_files/eusart.c: 40:     eusartRxLastError.status = 0;
  1886   0014FC  0E00               	movlw	0
  1887   0014FE  6E48               	movwf	_eusartRxLastError^0,c	;volatile
  1888   001500  0012               	return		;funcret
  1889   001502                     __end_of_EUSART_Initialize:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1893 ;; Defined at:
  1894 ;;		line 111 in file "mcc_generated_files/eusart.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1897 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_EUSART_Initialize
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text16
  1924   0016CC                     __ptext16:
  1925                           	callstack 0
  1926   0016CC                     _EUSART_SetOverrunErrorHandler:
  1927                           	callstack 24
  1928   0016CC                     
  1929                           ;mcc_generated_files/eusart.c: 112:     EUSART_OverrunErrorHandler = interruptHandler;
  1930   0016CC  C027  F04F         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1931   0016D0  C028  F050         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1932   0016D4  0012               	return		;funcret
  1933   0016D6                     __end_of_EUSART_SetOverrunErrorHandler:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1937 ;; Defined at:
  1938 ;;		line 107 in file "mcc_generated_files/eusart.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1941 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 4
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_EUSART_Initialize
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text17
  1968   0016D6                     __ptext17:
  1969                           	callstack 0
  1970   0016D6                     _EUSART_SetFramingErrorHandler:
  1971                           	callstack 24
  1972   0016D6                     
  1973                           ;mcc_generated_files/eusart.c: 108:     EUSART_FramingErrorHandler = interruptHandler;
  1974   0016D6  C027  F051         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1975   0016DA  C028  F052         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1976   0016DE  0012               	return		;funcret
  1977   0016E0                     __end_of_EUSART_SetFramingErrorHandler:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _EUSART_SetErrorHandler *****************
  1981 ;; Defined at:
  1982 ;;		line 115 in file "mcc_generated_files/eusart.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1985 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 4
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_EUSART_Initialize
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text18
  2012   0016E0                     __ptext18:
  2013                           	callstack 0
  2014   0016E0                     _EUSART_SetErrorHandler:
  2015                           	callstack 24
  2016   0016E0                     
  2017                           ;mcc_generated_files/eusart.c: 116:     EUSART_ErrorHandler = interruptHandler;
  2018   0016E0  C027  F04D         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2019   0016E4  C028  F04E         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2020   0016E8  0012               	return		;funcret
  2021   0016EA                     __end_of_EUSART_SetErrorHandler:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _ADC_Initialize *****************
  2025 ;; Defined at:
  2026 ;;		line 62 in file "mcc_generated_files/adc.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 5
  2047 ;; This function calls:
  2048 ;;		_ADC_SetInterruptHandler
  2049 ;; This function is called by:
  2050 ;;		_SYSTEM_Initialize
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text19
  2055   001650                     __ptext19:
  2056                           	callstack 0
  2057   001650                     _ADC_Initialize:
  2058                           	callstack 24
  2059   001650                     
  2060                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  2061   001650  0E00               	movlw	0
  2062   001652  6EC1               	movwf	193,c	;volatile
  2063                           
  2064                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x05;
  2065   001654  0E05               	movlw	5
  2066   001656  6EC0               	movwf	192,c	;volatile
  2067                           
  2068                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  2069   001658  0E00               	movlw	0
  2070   00165A  6EC3               	movwf	195,c	;volatile
  2071                           
  2072                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2073   00165C  0E00               	movlw	0
  2074   00165E  6EC4               	movwf	196,c	;volatile
  2075                           
  2076                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  2077   001660  0E01               	movlw	1
  2078   001662  6EC2               	movwf	194,c	;volatile
  2079   001664                     
  2080                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  2081   001664  8C9D               	bsf	157,6,c	;volatile
  2082   001666                     
  2083                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  2084   001666  0E02               	movlw	low _ADC_DefaultInterruptHandler
  2085   001668  6E27               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  2086   00166A  0E17               	movlw	high _ADC_DefaultInterruptHandler
  2087   00166C  6E28               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  2088   00166E  EC75  F00B         	call	_ADC_SetInterruptHandler	;wreg free
  2089   001672  0012               	return		;funcret
  2090   001674                     __end_of_ADC_Initialize:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _ADC_SetInterruptHandler *****************
  2094 ;; Defined at:
  2095 ;;		line 151 in file "mcc_generated_files/adc.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2098 ;;		 -> ADC_DefaultInterruptHandler(1), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 4
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_ADC_Initialize
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text20
  2125   0016EA                     __ptext20:
  2126                           	callstack 0
  2127   0016EA                     _ADC_SetInterruptHandler:
  2128                           	callstack 24
  2129   0016EA                     
  2130                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  2131   0016EA  C027  F04B         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  2132   0016EE  C028  F04C         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  2133   0016F2  0012               	return		;funcret
  2134   0016F4                     __end_of_ADC_SetInterruptHandler:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _ADC_GetConversion *****************
  2138 ;; Defined at:
  2139 ;;		line 115 in file "mcc_generated_files/adc.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  channel         1    wreg     enum E2740
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  channel         1    6[COMRAM] enum E2740
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2    2[COMRAM] unsigned short 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:        5 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 4
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text21
  2168   001502                     __ptext21:
  2169                           	callstack 0
  2170   001502                     _ADC_GetConversion:
  2171                           	callstack 26
  2172                           
  2173                           ;incstack = 0
  2174                           ;ADC_GetConversion@channel stored from wreg
  2175   001502  6E2B               	movwf	ADC_GetConversion@channel^0,c
  2176   001504                     
  2177                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  2178   001504  C02B  F029         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2179   001508  4629               	rlncf	??_ADC_GetConversion^0,f,c
  2180   00150A  4629               	rlncf	??_ADC_GetConversion^0,f,c
  2181   00150C  50C2               	movf	194,w,c	;volatile
  2182   00150E  1829               	xorwf	??_ADC_GetConversion^0,w,c
  2183   001510  0BC3               	andlw	-61
  2184   001512  1829               	xorwf	??_ADC_GetConversion^0,w,c
  2185   001514  6EC2               	movwf	194,c	;volatile
  2186   001516                     
  2187                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  2188   001516  80C2               	bsf	194,0,c	;volatile
  2189   001518                     
  2190                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  2191   001518  82C2               	bsf	194,1,c	;volatile
  2192   00151A                     l477:
  2193                           
  2194                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  2195   00151A  B2C2               	btfsc	194,1,c	;volatile
  2196   00151C  EF92  F00A         	goto	u1041
  2197   001520  EF94  F00A         	goto	u1040
  2198   001524                     u1041:
  2199   001524  EF8D  F00A         	goto	l477
  2200   001528                     u1040:
  2201   001528                     
  2202                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2203   001528  50C4               	movf	196,w,c	;volatile
  2204   00152A  6E2A               	movwf	(??_ADC_GetConversion+1)^0,c
  2205   00152C  6A29               	clrf	??_ADC_GetConversion^0,c
  2206   00152E  50C3               	movf	195,w,c	;volatile
  2207   001530  2429               	addwf	??_ADC_GetConversion^0,w,c
  2208   001532  6E27               	movwf	?_ADC_GetConversion^0,c
  2209   001534  0E00               	movlw	0
  2210   001536  202A               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  2211   001538  6E28               	movwf	(?_ADC_GetConversion+1)^0,c
  2212   00153A  0012               	return		;funcret
  2213   00153C                     __end_of_ADC_GetConversion:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2217 ;; Defined at:
  2218 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:        2 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 3
  2239 ;; This function calls:
  2240 ;;		_ADC_ISR
  2241 ;;		_TMR0_ISR
  2242 ;; This function is called by:
  2243 ;;		Interrupt level 2
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	intcode
  2248   000008                     __pintcode:
  2249                           	callstack 0
  2250   000008                     _INTERRUPT_InterruptManagerHigh:
  2251                           	callstack 22
  2252                           
  2253                           ;incstack = 0
  2254   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2255   00000A  CFFA F025          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2256   00000E  CFFB F026          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2257   000012                     
  2258                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  2259   000012  AC9D               	btfss	157,6,c	;volatile
  2260   000014  EF0E  F000         	goto	i2u73_41
  2261   000018  EF10  F000         	goto	i2u73_40
  2262   00001C                     i2u73_41:
  2263   00001C  EF1B  F000         	goto	i2l517
  2264   000020                     i2u73_40:
  2265   000020  AC9E               	btfss	158,6,c	;volatile
  2266   000022  EF15  F000         	goto	i2u74_41
  2267   000026  EF17  F000         	goto	i2u74_40
  2268   00002A                     i2u74_41:
  2269   00002A  EF1B  F000         	goto	i2l517
  2270   00002E                     i2u74_40:
  2271   00002E                     
  2272                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         ADC_ISR();
  2273   00002E  ECEB  F00A         	call	_ADC_ISR	;wreg free
  2274                           
  2275                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  2276   000032  EF2B  F000         	goto	i2l521
  2277   000036                     i2l517:
  2278   000036  AAF2               	btfss	242,5,c	;volatile
  2279   000038  EF20  F000         	goto	i2u75_41
  2280   00003C  EF22  F000         	goto	i2u75_40
  2281   000040                     i2u75_41:
  2282   000040  EF2B  F000         	goto	i2l521
  2283   000044                     i2u75_40:
  2284   000044  A4F2               	btfss	242,2,c	;volatile
  2285   000046  EF27  F000         	goto	i2u76_41
  2286   00004A  EF29  F000         	goto	i2u76_40
  2287   00004E                     i2u76_41:
  2288   00004E  EF2B  F000         	goto	i2l521
  2289   000052                     i2u76_40:
  2290   000052                     
  2291                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:         TMR0_ISR();
  2292   000052  ECD4  F00A         	call	_TMR0_ISR	;wreg free
  2293   000056                     i2l521:
  2294   000056  C026  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  2295   00005A  C025  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  2296   00005E  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2297   000060  0011               	retfie		f
  2298   000062                     __end_of_INTERRUPT_InterruptManagerHigh:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _TMR0_ISR *****************
  2302 ;; Defined at:
  2303 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 2
  2324 ;; This function calls:
  2325 ;;		_TMR0_CallBack
  2326 ;; This function is called by:
  2327 ;;		_INTERRUPT_InterruptManagerHigh
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text23
  2332   0015A8                     __ptext23:
  2333                           	callstack 0
  2334   0015A8                     _TMR0_ISR:
  2335                           	callstack 22
  2336   0015A8                     
  2337                           ;mcc_generated_files/tmr0.c: 131:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 134:     INTCONbits.TMR0IF = 0;
  2338   0015A8  94F2               	bcf	242,2,c	;volatile
  2339                           
  2340                           ;mcc_generated_files/tmr0.c: 137:     TMR0L = timer0ReloadVal;
  2341   0015AA  C045  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2342   0015AE                     
  2343                           ;mcc_generated_files/tmr0.c: 140:     if (++CountCallBack >= 1000)
  2344   0015AE  4A41               	infsnz	TMR0_ISR@CountCallBack^0,f,c	;volatile
  2345   0015B0  2A42               	incf	(TMR0_ISR@CountCallBack+1)^0,f,c	;volatile
  2346   0015B2  0EE8               	movlw	232
  2347   0015B4  5C41               	subwf	TMR0_ISR@CountCallBack^0,w,c	;volatile
  2348   0015B6  0E03               	movlw	3
  2349   0015B8  5842               	subwfb	(TMR0_ISR@CountCallBack+1)^0,w,c	;volatile
  2350   0015BA  A0D8               	btfss	status,0,c
  2351   0015BC  EFE2  F00A         	goto	i2u32_41
  2352   0015C0  EFE4  F00A         	goto	i2u32_40
  2353   0015C4                     i2u32_41:
  2354   0015C4  EFEA  F00A         	goto	i2l605
  2355   0015C8                     i2u32_40:
  2356   0015C8                     
  2357                           ;mcc_generated_files/tmr0.c: 141:     {;mcc_generated_files/tmr0.c: 143:         TMR0_Ca
      +                          llBack();
  2358   0015C8  EC3A  F00A         	call	_TMR0_CallBack	;wreg free
  2359   0015CC                     
  2360                           ;mcc_generated_files/tmr0.c: 146:         CountCallBack = 0;
  2361   0015CC  0E00               	movlw	0
  2362   0015CE  6E42               	movwf	(TMR0_ISR@CountCallBack+1)^0,c	;volatile
  2363   0015D0  0E00               	movlw	0
  2364   0015D2  6E41               	movwf	TMR0_ISR@CountCallBack^0,c	;volatile
  2365   0015D4                     i2l605:
  2366   0015D4  0012               	return		;funcret
  2367   0015D6                     __end_of_TMR0_ISR:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _TMR0_CallBack *****************
  2371 ;; Defined at:
  2372 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		NULL
  2395 ;;		_TMR0_DefaultInterruptHandler
  2396 ;; This function is called by:
  2397 ;;		_TMR0_ISR
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text24
  2402   001474                     __ptext24:
  2403                           	callstack 0
  2404   001474                     _TMR0_CallBack:
  2405                           	callstack 22
  2406   001474                     
  2407                           ;mcc_generated_files/tmr0.c: 154:     static volatile uint16_t one_sec_counter = 0;;mcc_
      +                          generated_files/tmr0.c: 155:     if (++one_sec_counter >= 5)
  2408   001474  4A3F               	infsnz	TMR0_CallBack@one_sec_counter^0,f,c	;volatile
  2409   001476  2A40               	incf	(TMR0_CallBack@one_sec_counter+1)^0,f,c	;volatile
  2410   001478  5040               	movf	(TMR0_CallBack@one_sec_counter+1)^0,w,c	;volatile
  2411   00147A  E109               	bnz	i2u19_40
  2412   00147C  0E05               	movlw	5
  2413   00147E  5C3F               	subwf	TMR0_CallBack@one_sec_counter^0,w,c	;volatile
  2414   001480  A0D8               	btfss	status,0,c
  2415   001482  EF45  F00A         	goto	i2u19_41
  2416   001486  EF47  F00A         	goto	i2u19_40
  2417   00148A                     i2u19_41:
  2418   00148A  EF4C  F00A         	goto	i2l1537
  2419   00148E                     i2u19_40:
  2420   00148E  908A               	bcf	138,0,c	;volatile
  2421   001490                     
  2422                           ;mcc_generated_files/tmr0.c: 161:         one_sec_counter = 0;
  2423   001490  0E00               	movlw	0
  2424   001492  6E40               	movwf	(TMR0_CallBack@one_sec_counter+1)^0,c	;volatile
  2425   001494  0E00               	movlw	0
  2426   001496  6E3F               	movwf	TMR0_CallBack@one_sec_counter^0,c	;volatile
  2427   001498                     i2l1537:
  2428                           
  2429                           ;mcc_generated_files/tmr0.c: 167:     if(TMR0_InterruptHandler)
  2430   001498  5049               	movf	_TMR0_InterruptHandler^0,w,c
  2431   00149A  104A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2432   00149C  B4D8               	btfsc	status,2,c
  2433   00149E  EF53  F00A         	goto	i2u20_41
  2434   0014A2  EF55  F00A         	goto	i2u20_40
  2435   0014A6                     i2u20_41:
  2436   0014A6  EF61  F00A         	goto	i2l614
  2437   0014AA                     i2u20_40:
  2438   0014AA                     
  2439                           ;mcc_generated_files/tmr0.c: 168:     {;mcc_generated_files/tmr0.c: 169:         TMR0_In
      +                          terruptHandler();
  2440   0014AA  D802               	call	i2u21_48
  2441   0014AC  EF61  F00A         	goto	i2u21_49
  2442   0014B0                     i2u21_48:
  2443   0014B0  0005               	push	
  2444   0014B2  6EFA               	movwf	pclath,c
  2445   0014B4  5049               	movf	_TMR0_InterruptHandler^0,w,c
  2446   0014B6  6EFD               	movwf	tosl,c
  2447   0014B8  504A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2448   0014BA  6EFE               	movwf	tosh,c
  2449   0014BC  6AFF               	clrf	tosu,c
  2450   0014BE  50FA               	movf	pclath,w,c
  2451   0014C0  0012               	return		;indir
  2452   0014C2                     i2u21_49:
  2453   0014C2                     i2l614:
  2454   0014C2  0012               	return		;funcret
  2455   0014C4                     __end_of_TMR0_CallBack:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2459 ;; Defined at:
  2460 ;;		line 177 in file "mcc_generated_files/tmr0.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		None
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_TMR0_Initialize
  2484 ;;		_TMR0_CallBack
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text25
  2489   001700                     __ptext25:
  2490                           	callstack 0
  2491   001700                     _TMR0_DefaultInterruptHandler:
  2492                           	callstack 22
  2493   001700  0012               	return		;funcret
  2494   001702                     __end_of_TMR0_DefaultInterruptHandler:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _ADC_ISR *****************
  2498 ;; Defined at:
  2499 ;;		line 140 in file "mcc_generated_files/adc.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 1
  2520 ;; This function calls:
  2521 ;;		NULL
  2522 ;;		_ADC_DefaultInterruptHandler
  2523 ;; This function is called by:
  2524 ;;		_INTERRUPT_InterruptManagerHigh
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text26
  2529   0015D6                     __ptext26:
  2530                           	callstack 0
  2531   0015D6                     _ADC_ISR:
  2532                           	callstack 23
  2533   0015D6                     
  2534                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  2535   0015D6  9C9E               	bcf	158,6,c	;volatile
  2536   0015D8                     
  2537                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  2538   0015D8  504B               	movf	_ADC_InterruptHandler^0,w,c
  2539   0015DA  104C               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  2540   0015DC  B4D8               	btfsc	status,2,c
  2541   0015DE  EFF3  F00A         	goto	i2u30_41
  2542   0015E2  EFF5  F00A         	goto	i2u30_40
  2543   0015E6                     i2u30_41:
  2544   0015E6  EF01  F00B         	goto	i2l487
  2545   0015EA                     i2u30_40:
  2546   0015EA                     
  2547                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  2548   0015EA  D802               	call	i2u31_48
  2549   0015EC  EF01  F00B         	goto	i2u31_49
  2550   0015F0                     i2u31_48:
  2551   0015F0  0005               	push	
  2552   0015F2  6EFA               	movwf	pclath,c
  2553   0015F4  504B               	movf	_ADC_InterruptHandler^0,w,c
  2554   0015F6  6EFD               	movwf	tosl,c
  2555   0015F8  504C               	movf	(_ADC_InterruptHandler+1)^0,w,c
  2556   0015FA  6EFE               	movwf	tosh,c
  2557   0015FC  6AFF               	clrf	tosu,c
  2558   0015FE  50FA               	movf	pclath,w,c
  2559   001600  0012               	return		;indir
  2560   001602                     i2u31_49:
  2561   001602                     i2l487:
  2562   001602  0012               	return		;funcret
  2563   001604                     __end_of_ADC_ISR:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _ADC_DefaultInterruptHandler *****************
  2567 ;; Defined at:
  2568 ;;		line 155 in file "mcc_generated_files/adc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		None
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_ADC_Initialize
  2592 ;;		_ADC_ISR
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text27
  2597   001702                     __ptext27:
  2598                           	callstack 0
  2599   001702                     _ADC_DefaultInterruptHandler:
  2600                           	callstack 23
  2601   001702  0012               	return		;funcret
  2602   001704                     __end_of_ADC_DefaultInterruptHandler:
  2603                           	callstack 0
  2604                           
  2605                           	psect	rparam
  2606   000000                     
  2607                           	psect	temp
  2608   000053                     btemp:
  2609                           	callstack 0
  2610   000053                     	ds	1
  2611   000000                     int$flags	set	btemp
  2612   000000                     wtemp8	set	btemp+1
  2613   000000                     ttemp5	set	btemp+1
  2614   000000                     ttemp6	set	btemp+4
  2615   000000                     ttemp7	set	btemp+8
  2616                           
  2617                           	psect	config
  2618                           
  2619                           ; Padding undefined space
  2620   300000                     	org	3145728
  2621   300000  FF                 	db	255
  2622                           
  2623                           ;Config register CONFIG1H @ 0x300001
  2624                           ;	Oscillator Selection bits
  2625                           ;	FOSC = HS, HS oscillator
  2626                           ;	Fail-Safe Clock Monitor Enable bit
  2627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2628                           ;	Internal/External Oscillator Switchover bit
  2629                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2630   300001                     	org	3145729
  2631   300001  02                 	db	2
  2632                           
  2633                           ;Config register CONFIG2L @ 0x300002
  2634                           ;	Power-up Timer Enable bit
  2635                           ;	PWRTEN = OFF, PWRT disabled
  2636                           ;	Brown-out Reset Enable bits
  2637                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2638                           ;	Brown Out Reset Voltage bits
  2639                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2640   300002                     	org	3145730
  2641   300002  1F                 	db	31
  2642                           
  2643                           ;Config register CONFIG2H @ 0x300003
  2644                           ;	Watchdog Timer Enable bit
  2645                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2646                           ;	Watchdog Timer Postscale Select bits
  2647                           ;	WDTPS = 32768, 1:32768
  2648   300003                     	org	3145731
  2649   300003  1E                 	db	30
  2650                           
  2651                           ; Padding undefined space
  2652   300004                     	org	3145732
  2653   300004  FF                 	db	255
  2654                           
  2655                           ;Config register CONFIG3H @ 0x300005
  2656                           ;	CCP2 MUX bit
  2657                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2658                           ;	PORTB A/D Enable bit
  2659                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2660                           ;	Low-Power Timer1 Oscillator Enable bit
  2661                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2662                           ;	HFINTOSC Fast Start-up
  2663                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2664                           ;	MCLR Pin Enable bit
  2665                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2666   300005                     	org	3145733
  2667   300005  8B                 	db	139
  2668                           
  2669                           ;Config register CONFIG4L @ 0x300006
  2670                           ;	Stack Full/Underflow Reset Enable bit
  2671                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2672                           ;	Single-Supply ICSP Enable bit
  2673                           ;	LVP = ON, Single-Supply ICSP enabled
  2674                           ;	Extended Instruction Set Enable bit
  2675                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2676                           ;	Background Debugger Enable bit
  2677                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2678   300006                     	org	3145734
  2679   300006  85                 	db	133
  2680                           
  2681                           ; Padding undefined space
  2682   300007                     	org	3145735
  2683   300007  FF                 	db	255
  2684                           
  2685                           ;Config register CONFIG5L @ 0x300008
  2686                           ;	Code Protection Block 0
  2687                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2688                           ;	Code Protection Block 1
  2689                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2690                           ;	Code Protection Block 2
  2691                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2692                           ;	Code Protection Block 3
  2693                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2694   300008                     	org	3145736
  2695   300008  0F                 	db	15
  2696                           
  2697                           ;Config register CONFIG5H @ 0x300009
  2698                           ;	Boot Block Code Protection bit
  2699                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2700                           ;	Data EEPROM Code Protection bit
  2701                           ;	CPD = OFF, Data EEPROM not code-protected
  2702   300009                     	org	3145737
  2703   300009  C0                 	db	192
  2704                           
  2705                           ;Config register CONFIG6L @ 0x30000A
  2706                           ;	Write Protection Block 0
  2707                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2708                           ;	Write Protection Block 1
  2709                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2710                           ;	Write Protection Block 2
  2711                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2712                           ;	Write Protection Block 3
  2713                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2714   30000A                     	org	3145738
  2715   30000A  0F                 	db	15
  2716                           
  2717                           ;Config register CONFIG6H @ 0x30000B
  2718                           ;	Configuration Register Write Protection bit
  2719                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2720                           ;	Boot Block Write Protection bit
  2721                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2722                           ;	Data EEPROM Write Protection bit
  2723                           ;	WRTD = OFF, Data EEPROM not write-protected
  2724   30000B                     	org	3145739
  2725   30000B  E0                 	db	224
  2726                           
  2727                           ;Config register CONFIG7L @ 0x30000C
  2728                           ;	Table Read Protection Block 0
  2729                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2730                           ;	Table Read Protection Block 1
  2731                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2732                           ;	Table Read Protection Block 2
  2733                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2734                           ;	Table Read Protection Block 3
  2735                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2736   30000C                     	org	3145740
  2737   30000C  0F                 	db	15
  2738                           
  2739                           ;Config register CONFIG7H @ 0x30000D
  2740                           ;	Boot Block Table Read Protection bit
  2741                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2742   30000D                     	org	3145741
  2743   30000D  40                 	db	64
  2744                           tosu	equ	0xFFF
  2745                           tosh	equ	0xFFE
  2746                           tosl	equ	0xFFD
  2747                           stkptr	equ	0xFFC
  2748                           pclatu	equ	0xFFB
  2749                           pclath	equ	0xFFA
  2750                           pcl	equ	0xFF9
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           prodh	equ	0xFF4
  2756                           prodl	equ	0xFF3
  2757                           indf0	equ	0xFEF
  2758                           postinc0	equ	0xFEE
  2759                           postdec0	equ	0xFED
  2760                           preinc0	equ	0xFEC
  2761                           plusw0	equ	0xFEB
  2762                           fsr0h	equ	0xFEA
  2763                           fsr0l	equ	0xFE9
  2764                           wreg	equ	0xFE8
  2765                           indf1	equ	0xFE7
  2766                           postinc1	equ	0xFE6
  2767                           postdec1	equ	0xFE5
  2768                           preinc1	equ	0xFE4
  2769                           plusw1	equ	0xFE3
  2770                           fsr1h	equ	0xFE2
  2771                           fsr1l	equ	0xFE1
  2772                           bsr	equ	0xFE0
  2773                           indf2	equ	0xFDF
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           preinc2	equ	0xFDC
  2777                           plusw2	equ	0xFDB
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        36
    BSS         16
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), date_time_lcd$lcd_data(COMRAM[4]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), date_time_lcd$lcd_data(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), date_time_lcd$lcd_data(COMRAM[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> date_time_lcd(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    S2055$buffer	PTR unsigned char  size(2) Largest target is 0

    S2055$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_lcd_4bit_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15163
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   15141
                     _ADC_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                 _lcd_4bit_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   14651
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   10894
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    3270
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    2832
                                             10 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    3306
                                             10 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2459
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     255
                                              2 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                       2     2      0       0
                                              0 COMRAM     2     2      0
                            _ADC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _lcd_4bit_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
   _TMR0_StartTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      52       1       87.2%
BITBIGSFRlllll      1C      0       0      49        0.0%
BITBIGSFRhlhh       19      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRhllhhh      B      0       0      40        0.0%
BITBIGSFRhllhll      B      0       0      43        0.0%
BITBIGSFRhllhlh      7      0       0      42        0.0%
BITBIGSFRhllhhl      7      0       0      41        0.0%
BITBIGSFRllh         4      0       0      47        0.0%
BITBIGSFRlh          4      0       0      46        0.0%
BITBIGSFRhlll        4      0       0      45        0.0%
BITBIGSFRhllhhh      2      0       0      39        0.0%
BITBIGSFRhllhll      1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      38        0.0%
BITBIGSFRllllh       1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      50        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 05 20:59:34 2024

                              ?_lcd_send_4bits 002F                                    _star_button 0046  
                                           l31 130C                                             l36 1422  
                              _timer0ReloadVal 0045                                            l220 1116  
                                          l141 162A                                            l138 1472  
                                          l260 136A                                            l318 15A6  
                                          l239 1226                                            l432 16D4  
                                          l512 16FA                                            l344 1694  
                                          l435 16E8                                            l347 16CA  
                                          l429 16DE                                            l462 1672  
                                          l390 1500                                            l551 13A0  
                                          l480 153A                                            l617 16C0  
                                          l490 16F2                                            l554 13BA  
                                          l548 139A                                            l477 151A  
                                          l584 16B6                                            l587 16FE  
                                          u800 114C                                            u801 1148  
                                          u900 13D8                                            u901 13D4  
                                          u830 101A                                            u814 1172  
                                          u910 123C                                            u831 1016  
                                          u815 116E                                            u911 1238  
                                          u840 103A                                            u824 11C8  
                                          u920 1276                                            u841 1036  
                                          u825 11C4                                            u921 1272  
                                          u870 10FE                                            u854 1060  
                                          u790 112C                                            u871 10F8  
                                          u855 105C                                            u791 1128  
                                          u864 10B6                                            u880 131E  
                                          u865 10B2                                            u881 131A  
                                          u890 133E                                            u891 133A  
                                          u876 1100                                __end_of_ADC_ISR 1604  
                                          _ret 0047                 ?_EUSART_SetFramingErrorHandler 0027  
          __end_of_lcd_4bit_send_enable_signal 162C                    _lcd_4bit_send_enable_signal 1604  
              __end_of_ADC_SetInterruptHandler 16F4                                            tosl 0FFD  
                                          wreg 0FE8                    lcd_send_4bits@_data_command 0030  
                 ?_ADC_DefaultInterruptHandler 0025                                           l2101 103A  
                                         l2103 1042                                           l2111 1114  
                                         l2105 1098                                           l2121 1346  
                                         l2051 1118                                           l2123 1368  
                                         l2115 130E                                           l2131 13E0  
                                         l2141 16E0                                           l1501 15A4  
                                         l2109 10E8                                           l2053 112C  
                                         l2117 131E                                           l2133 1420  
                                         l2143 16EA                                           l1503 16F4  
                                         l2063 11FA                                           l2055 114C  
                                         l2119 133E                                           l2127 13C8  
                                         l2151 1240                                           l2241 1664  
                                         l2137 16D6                                           l1505 16C2  
                                         l2145 16B8                                           l2057 1154  
                                         l2065 1224                                           l2081 145A  
                                         l2073 1424                                           l2129 13D8  
                                         l2161 1264                                           l2153 1254  
                                         l2243 1666                                           l2139 16CC  
                                         l2251 16A6                                           l2059 11AA  
                                         l2091 161A                                           l2075 1424  
                                         l2171 12B2                                           l2163 1266  
                                         l2147 1228                                           l2331 1674  
                                         l2261 14F0                                           l2253 16B2  
                                         l2245 1696                                           l2093 1628  
                                         l2085 1604                                           l2077 1434  
                                         l2181 12E8                                           l2173 12B8  
                                         l2165 1276                                           l2149 123C  
                                         l2341 1688                                           l2333 1678  
                                         l2351 1528                                           l2239 1650  
                                         l2263 14FC                                           l2255 14C4  
                                         l2247 16A2                                           l2087 1604  
                                         l2079 1446                                           l2183 12F4  
                                         l2175 12C4                                           l2167 1288  
                                         l2159 1258                                           l2343 168C  
                                         l2335 167C                                           l2345 1504  
                                         l2257 14D8                                           l2249 16A4  
                                         l2097 1006                                           l2089 1610  
                                         l2185 1300                                           l2177 12D0  
                                         l2169 1294                                           l2337 1680  
                                         l2521 1370                                           l2347 1516  
                                         l2259 14E4                                           l2099 101A  
                                         l2179 12DC                                           l2339 1684  
                                         l2531 13A2                                           l2523 1372  
                                         l2349 1518                                           l2541 120E  
                                         l2533 13AA                                           l2525 1374  
                                         l2535 13BC                                           l2527 1376  
                                         l2519 136C                                           l1497 1572  
                                         l1649 16FC                                           l2529 1384  
                                         l1499 1596                                           STR_1 1001  
                                         u1040 1528                                           u1041 1524  
                                         u1207 12B4                                           u1160 139A  
                                         u1217 1612                                           u1161 1396  
                                         u1170 13BA                                           u1171 13B6  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           u1187 127C  
                                         u1197 129A                                           _WPUB 0F7C  
                ??_lcd_4bit_send_enable_signal 0030                                           _main 136C  
                              _TMR0_StartTimer 16FC                                           fsr2h 0FDA  
                                         indf2 0FDF                                           fsr1l 0FE1  
                                         fsr2l 0FD9                                           btemp 0053  
                                         prodl 0FF3                                           start 0062  
                                 ___param_bank 0000                          _lcd_4bit_send_command 13C8  
                         _gpio_pin_write_logic 1118                        __end_of_TMR0_Initialize 16B8  
                        lcd_4bit_intialize@lcd 0035                          lcd_4bit_intialize@ret 0037  
               ??_TMR0_DefaultInterruptHandler 0025                  __end_of_OSCILLATOR_Initialize 16CC  
                                        ?_main 0025                                          _ANSEL 0F7E  
                                        _T0CON 0FD5                                          i2l521 0056  
                                        i2l611 148E                                          i2l620 1700  
                                        i2l605 15D4                                          i2l517 0036  
                                        i2l614 14C2                                          i2l493 1702  
                                        i2l487 1602                                          _RCREG 0FAE  
                 TMR0_CallBack@one_sec_counter 003F                                          _RCSTA 0FAB  
                                        _TMR0H 0FD7                                          _TMR0L 0FD6  
                                        _SPBRG 0FAF                                          _PORTA 0F80  
                                        _PORTB 0F81                                          _PORTC 0F82  
                                        _PORTD 0F83                                          _PORTE 0F84  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                                          _TXREG 0FAD  
                                        _TXSTA 0FAC                      ?_TMR0_SetInterruptHandler 0027  
                             __end_of_TMR0_ISR 15D6                                          pclath 0FFA  
                                        pclatu 0FFB                                          tablat 0FF5  
                                        ttemp5 0054                                          ttemp6 0057  
                                        ttemp7 005B                                          status 0FD8  
                                        wtemp8 0054                                __initialization 153C  
                                 __end_of_main 13C8                          ?_gpio_pin_write_logic 0027  
                                    ??_ADC_ISR 0025                                  _lat_registers 000B  
                                       ??_main 0039                                  __activetblptr 0003  
            _EUSART_DefaultFramingErrorHandler 0000                        __end_of_TMR0_StartTimer 1700  
                                       _ADCON0 0FC2                                         _ADCON1 0FC1  
                                       _ADCON2 0FC0                     _EUSART_OverrunErrorHandler 004F  
                                       _ADRESH 0FC4                                         _ADRESL 0FC3  
                                       _ANSELH 0F7F                                         i2l2011 0012  
                                       i2l2013 0020                                         i2l2015 002E  
                                       i2l2017 0044                                         i2l2019 0052  
                                       i2l1533 1474                                         i2l1535 1490  
                                       i2l1537 1498                                         i2l1641 15A8  
                                       i2l1635 15D6                                         i2l1539 14AA  
                                       i2l1643 15AE                                         i2l1637 15D8  
                                       i2l1645 15C8                                         i2l1639 15EA  
                                       i2l1647 15CC                            _converted_LDR_Value 0043  
                                       _OSCCON 0FD3                                         _SPBRGH 0FB0  
                       ?_lcd_4bit_send_command 0032                               ?_TMR0_Initialize 0025  
                                       clear_0 1562                                         isa$std 0001  
      gpio_pin_direction_intialize@_pin_config 0027                                   __pdataCOMRAM 0001  
                                 __mediumconst 0000                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                     ADC_GetConversion@channel 002B                          __end_of_TMR0_CallBack 14C4  
     TMR0_SetInterruptHandler@InterruptHandler 0027        ADC_SetInterruptHandler@InterruptHandler 0027  
             ??_INTERRUPT_InterruptManagerHigh 0025                ?_INTERRUPT_InterruptManagerHigh 0025  
                            _SYSTEM_Initialize 1674                                     __accesstop 0060  
                      __end_of__initialization 1568                             ?_SYSTEM_Initialize 0025  
                                ___rparam_used 0001                               ??_lcd_send_4bits 0031  
                       ??_gpio_pin_write_logic 0029                                 __pcstackCOMRAM 0025  
                          ??_SYSTEM_Initialize 0039                                      ?_TMR0_ISR 0025  
                     lcd_4bit_send_command@lcd 0032                       lcd_4bit_send_command@ret 0034  
                        TMR0_ISR@CountCallBack 0041                ??_EUSART_SetOverrunErrorHandler 0029  
                             ?_TMR0_StartTimer 0025                      __end_of_SYSTEM_Initialize 1696  
                                   __pnvCOMRAM 0049               __end_of_TMR0_SetInterruptHandler 16C2  
                                   ??_TMR0_ISR 0025                                        _ADC_ISR 15D6  
                                      _BAUDCON 0FB8                                        i2u20_40 14AA  
                                      i2u20_41 14A6                                        i2u30_40 15EA  
                                      i2u21_48 14B0                                        i2u30_41 15E6  
                                      i2u21_49 14C2                                        i2u31_48 15F0  
                                      i2u32_40 15C8                                        i2u31_49 1602  
                                      i2u32_41 15C4                                        i2u19_40 148E  
                                      i2u19_41 148A                                        _OSCTUNE 0F9B  
                                      i2u73_40 0020                                        i2u73_41 001C  
                                      i2u74_40 002E                                        i2u74_41 002A  
                                      i2u75_40 0044                                        i2u75_41 0040  
                                      i2u76_40 0052                                        i2u76_41 004E  
                     ??_EUSART_SetErrorHandler 0029                                 _tris_registers 0015  
                         _ADC_InterruptHandler 004B                                        __Hparam 0000  
                      _ADC_SetInterruptHandler 16EA                                        __Lparam 0000  
                                 __psmallconst 1000                     __end_of_gpio_pin_intialize 136C  
                                      __pcinit 153C                                        __ramtop 1000  
                                      __ptext0 136C                                        __ptext1 16FC  
                                      __ptext2 1674                                        __ptext3 1228  
                                      __ptext4 13C8                                        __ptext5 1424  
                                      __ptext6 1604                                        __ptext7 130E  
                                      __ptext8 1118                                        __ptext9 1006  
                                    _T0CONbits 0FD5                          _OSCILLATOR_Initialize 16C2  
                     ??_PIN_MANAGER_Initialize 0027          lcd_4bit_intialize@l_data_pins_counter 0038  
                         end_of_initialization 1568                              lcd_send_4bits@lcd 002F  
                            lcd_send_4bits@ret 0031          __end_of_EUSART_SetOverrunErrorHandler 16D6  
                _EUSART_SetOverrunErrorHandler 16CC                     __end_of_lcd_4bit_intialize 130E  
                      ??_lcd_4bit_send_command 0034                              _EUSART_Initialize 14C4  
                        gpio_pin_intialize@ret 0031                             ?_EUSART_Initialize 0025  
                                    _RCSTAbits 0FAB                                        postdec1 0FE5  
                                      postdec2 0FDD                                        postinc0 0FEE  
                                      postinc2 0FDE                            ??_EUSART_Initialize 0029  
                     _TMR0_SetInterruptHandler 16B8                                      _PORTBbits 0F81  
                gpio_pin_intialize@_pin_config 002F           __end_of_gpio_pin_direction_intialize 1118  
                 _gpio_pin_direction_intialize 1006            __end_of_ADC_DefaultInterruptHandler 1704  
                  _ADC_DefaultInterruptHandler 1702                      __end_of_EUSART_Initialize 1502  
                ??_ADC_DefaultInterruptHandler 0025                      ??_ADC_SetInterruptHandler 0029  
                                    _TXSTAbits 0FAC                   __end_of_INTERRUPT_Initialize 16FC  
                convert_uint16_to_string@F3543 0039                     _EUSART_DefaultErrorHandler 0000  
                                __pidataCOMRAM 162C                                 _ADC_Initialize 1650  
                       ?_OSCILLATOR_Initialize 0025                            start_initialization 153C  
                 ?_lcd_4bit_send_enable_signal 002F                  ?_gpio_pin_direction_intialize 0027  
               ?_EUSART_SetOverrunErrorHandler 0027                     _EUSART_FramingErrorHandler 0051  
                       _EUSART_SetErrorHandler 16E0                                  _date_time_lcd 001F  
                       __end_of_ADC_Initialize 1674                                       ?_ADC_ISR 0025  
                 lcd_4bit_send_command@command 0033                                    __pbssCOMRAM 0039  
              gpio_pin_direction_intialize@ret 002D                          _TMR0_InterruptHandler 0049  
                       _PIN_MANAGER_Initialize 1572                                      __pintcode 0008  
              gpio_pin_write_logic@_pin_config 0027                                ?_ADC_Initialize 0025  
                    gpio_pin_write_logic@logic 0028                                    __smallconst 1000  
                                _TMR0_CallBack 1474                             _gpio_pin_intialize 130E  
                         _INTERRUPT_Initialize 16F4                              ??_TMR0_Initialize 0029  
               ??_gpio_pin_direction_intialize 0028                                       _LATAbits 0F89  
       EUSART_SetErrorHandler@interruptHandler 0027                                       _LATBbits 0F8A  
                          ?_gpio_pin_intialize 002F                                       _IPR1bits 0F9F  
                                     _PIE1bits 0F9D                              _eusartRxLastError 0048  
                __end_of_lcd_4bit_send_command 1424                     ??_TMR0_SetInterruptHandler 0029  
                                     _PIR1bits 0F9E                ??_EUSART_SetFramingErrorHandler 0029  
                                     _RCONbits 0FD0                                       _TMR0_ISR 15A8  
            _EUSART_DefaultOverrunErrorHandler 0000                             _lcd_4bit_intialize 1228  
                                   _ADCON0bits 0FC2                           ??_gpio_pin_intialize 0030  
                          ?_lcd_4bit_intialize 0035                                 ?_TMR0_CallBack 0025  
                      gpio_pin_write_logic@ret 002E                                    _INTCON2bits 0FF1  
                                    copy_data0 1550                          ?_INTERRUPT_Initialize 0025  
                         ??_lcd_4bit_intialize 0036                                       __Hrparam 0000  
                                     __Lrparam 0000                              _ADC_GetConversion 1502  
                      ??_OSCILLATOR_Initialize 0027                            _EUSART_ErrorHandler 004D  
                           ?_ADC_GetConversion 0027                              ??_TMR0_StartTimer 0027  
                          ??_ADC_GetConversion 0029                                       __ptext10 1696  
                                     __ptext11 16B8                                       __ptext20 16EA  
                                     __ptext12 1572                                       __ptext21 1502  
                                     __ptext13 16C2                                       __ptext14 16F4  
                                     __ptext23 15A8                                       __ptext15 14C4  
                                     __ptext24 1474                                       __ptext16 16CC  
                                     __ptext25 1700                                       __ptext17 16D6  
                                     __ptext26 15D6                                       __ptext18 16E0  
                                     __ptext27 1702                                       __ptext19 1650  
         __end_of_TMR0_DefaultInterruptHandler 1702                   _TMR0_DefaultInterruptHandler 1700  
                    __end_of_ADC_GetConversion 153C                        ?_EUSART_SetErrorHandler 0027  
EUSART_SetOverrunErrorHandler@interruptHandler 0027                                       isa$xinst 0000  
                                     int$flags 0053          __end_of_EUSART_SetFramingErrorHandler 16E0  
                _EUSART_SetFramingErrorHandler 16D6                                 _lcd_send_4bits 1424  
                                   _INTCONbits 0FF2                                ??_TMR0_CallBack 0025  
                       ??_INTERRUPT_Initialize 0027                   __end_of_gpio_pin_write_logic 1228  
                     ?_ADC_SetInterruptHandler 0027                                       intlevel2 0000  
               lcd_4bit_send_enable_signal@lcd 002F                 lcd_4bit_send_enable_signal@ret 0030  
                      ?_PIN_MANAGER_Initialize 0025                 __end_of_EUSART_SetErrorHandler 16EA  
                             ??_ADC_Initialize 0029                  ?_TMR0_DefaultInterruptHandler 0025  
                       __end_of_lcd_send_4bits 1474  EUSART_SetFramingErrorHandler@interruptHandler 0027  
       __end_of_INTERRUPT_InterruptManagerHigh 0062                 _INTERRUPT_InterruptManagerHigh 0008  
                               _port_registers 0001                                _TMR0_Initialize 1696  
               __end_of_PIN_MANAGER_Initialize 15A8  
